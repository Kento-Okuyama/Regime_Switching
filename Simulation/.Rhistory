jEta3[,t,2,1,] <- mEta[,t+1,2,]$clone() + (mEta2[,t+2,2,]$clone() - jEta[,t+1,2,1,]$clone())$unsqueeze(-2)$matmul(jPtilde[,t,2,1,,]$clone())$squeeze()
jEta3[,t,2,2,] <- mEta[,t+1,2,]$clone() + (mEta2[,t+2,2,]$clone() - jEta[,t+1,2,2,]$clone())$unsqueeze(-2)$matmul(jPtilde[,t,2,2,,]$clone())$squeeze()
jP3[,t,1,1,,] <- mP[,t+1,1,,]$clone() + jPtilde[,t,1,1,,]$clone()$matmul(mP2[,t+2,1,,]$clone() - jP[,t+1,1,1,,])$matmul(jPtilde[,t,1,1,,]$clone())
jP3[,t,2,1,,] <- mP[,t+1,2,,]$clone() + jPtilde[,t,2,1,,]$clone()$matmul(mP2[,t+2,2,,]$clone() - jP[,t+1,2,1,,])$matmul(jPtilde[,t,2,1,,]$clone())
jP3[,t,2,2,,] <- mP[,t+1,2,,]$clone() + jPtilde[,t,2,2,,]$clone()$matmul(mP2[,t+2,2,,]$clone() - jP[,t+1,2,2,,])$matmul(jPtilde[,t,2,2,,]$clone())
mEta2[,t+1,1,] <- (jPr3[,t+1,1,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1) * jEta3[,t,1,1,]$clone() + (jPr3[,t+1,2,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1) * jEta3[,t,2,1,]$clone()
mEta2[,t+1,2,] <- (jPr3[,t+1,2,2]$clone() / (1 - mPr2[,t+1]$clone()))$unsqueeze(-1) * jEta3[,t,2,2,]$clone()
subEta2[,t,1,1,] <- mEta2[,t+1,1,]$clone() - jEta3[,t,1,1,]$clone()
subEta2[,t,2,1,] <- mEta2[,t+1,1,]$clone() - jEta3[,t,2,1,]$clone()
subEta2[,t,2,2,] <- mEta2[,t+1,2,]$clone() - jEta3[,t,2,2,]$clone()
subEtaSq2[,t,1,1,,] <- subEta2[,t,1,1,]$clone()$unsqueeze(-1)$matmul(subEta2[,t,1,1,]$clone()$unsqueeze(-2))
subEtaSq2[,t,2,1,,] <- subEta2[,t,2,1,]$clone()$unsqueeze(-1)$matmul(subEta2[,t,2,1,]$clone()$unsqueeze(-2))
subEtaSq2[,t,2,2,,] <- subEta2[,t,2,2,]$clone()$unsqueeze(-1)$matmul(subEta2[,t,2,2,]$clone()$unsqueeze(-2))
mP2[,t+1,1,,] <- (jPr3[,t+1,1,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1)$unsqueeze(-1) * (jP3[,t,1,1,,]$clone() + subEtaSq2[,t,1,1,,]$clone()) + (jPr3[,t+1,2,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1)$unsqueeze(-1) * (jP3[,t,2,1,,]$clone() + subEtaSq2[,t,2,1,,]$clone())
mP2[,t+1,2,,] <- (jPr3[,t+1,2,2]$clone() / (1 - mPr2[,t+1]$clone()))$unsqueeze(-1)$unsqueeze(-1) * (jP3[,t,2,2,,]$clone() + subEtaSq2[,t,2,2,,]$clone())
eta1_sm[,t,] <- mPr2[,t+1]$clone()$unsqueeze(-1) * mEta2[,t+1,1,]$clone() + (1 - mPr2[,t+1]$clone())$unsqueeze(-1) * mEta2[,t+1,2,]$clone()
subEta3[,t,1,] <- eta1_sm[,t,]$clone() - mEta2[,t+1,1,]$clone()
subEta3[,t,2,] <- eta1_sm[,t,]$clone() - mEta2[,t+1,2,]$clone()
subEtaSq3[,t,1,,] <- subEta3[,t,1,]$clone()$unsqueeze(-1)$matmul(subEta3[,t,1,]$clone()$unsqueeze(-2))
subEtaSq3[,t,2,,] <- subEta3[,t,2,]$clone()$unsqueeze(-1)$matmul(subEta3[,t,2,]$clone()$unsqueeze(-2))
P_sm[,t,,] <- mPr2[,t+1]$clone()$unsqueeze(-1)$unsqueeze(-1) * (mP2[,t+1,1,,]$clone() + subEtaSq3[,t,1,,]$clone()) + (1 - mPr2[,t+1]$clone())$unsqueeze(-1)$unsqueeze(-1) * (mP2[,t+1,2,,]$clone() + subEtaSq3[,t,2,,]$clone()) }
# score function
delta <- as.numeric(torch_sum(eta1_pred - df$eta1_true)**2)
# information criterion
# q <- length(torch_cat(thetaBest)) - 8
# AIC <- -2 * log(sumLikBest) + 2 * q
# BIC <- -2 * log(sumLikBest) + q * log(N * Nt)
# evaluation of the regime prediction
DO <- 2 - mPr[,2:(Nt+1)]
DO2 <- 2 - mPr2[,2:(Nt+1)]
df_S <- melt(S); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr_diff <- melt(as.array(DO2  > 1.5) + 1); colnames(df_Pr_diff) <- c('ID', 'time', 'S')
df_Pr_diff$S <- abs(df_Pr_diff$S - df_S$S)
plot_Pr_diff <- ggplot(data=df_Pr_diff, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, plot_Pr_diff, labels = "AUTO")
# contingency table
cTable1 <- table(S, round(as.array(DO)))
sensitivity1 <- cTable1[1,1] / sum(cTable1[1,])
specificity1 <- cTable1[2,2] / sum(cTable1[2,])
# table(S[,Nt], round(as.array(DO[,Nt])))
cTable2 <- table(S, round(as.array(DO2)))
sensitivity2 <- cTable2[1,1] / sum(cTable2[1,])
specificity2 <- cTable2[2,2] / sum(cTable2[2,])
# table(S[,Nt], round(as.array(DO2[,Nt])))
# mean score function
delta <- sum((as.array(eta1_pred) - eta1)**2)
delta_NT <- delta / (N * Nt)
# plot of the intra-individual latent score predictions
eta1_pred[,Nt,] <- mPr[,Nt+1]$clone()$unsqueeze(-1) * mEta[,Nt+1,1,]$clone() + (1 - mPr[,Nt+1]$clone())$unsqueeze(-1) * mEta[,Nt+1,2,]$clone()
P_pred <- mPr[,2:(Nt+1)]$clone()$unsqueeze(-1)$unsqueeze(-1) * mP[,2:(Nt+1),1,,]$clone() + (1 - mPr[,2:(Nt+1)]$clone())$unsqueeze(-1)$unsqueeze(-1) * mP[,2:(Nt+1),2,,]$clone()
obs <- sample(1:N, 2)
df_eta1_1 <- melt(df$eta1[obs,,1]); colnames(df_eta1_1) <- c('ID', 'time', 'eta1_1')
df_eta1_2 <- melt(df$eta1[obs,,2]); colnames(df_eta1_2) <- c('ID', 'time', 'eta1_2')
plot_eta1_1 <- ggplot(data=df_eta1_1, aes(time, eta1_1, group=ID, color=as.factor(ID))) + geom_line(size=.5) + theme(legend.position='none')
plot_eta1_2 <- ggplot(data=df_eta1_2, aes(time, eta1_2, group=ID, color=as.factor(ID))) + geom_line(size=.5) + theme(legend.position='none')
df_eta1_pred_1 <- melt(as.array(eta1_pred[obs,,1])); colnames(df_eta1_pred_1) <- c('ID', 'time', 'eta1_pred_1')
df_eta1_pred_2 <- melt(as.array(eta1_pred[obs,,2])); colnames(df_eta1_pred_2) <- c('ID', 'time', 'eta1_pred_2')
df_P_pred_1 <- melt(as.array(P_pred[obs,,1,1])); colnames(df_P_pred_1) <- c('ID', 'time', 'P_pred_1')
df_P_pred_2 <- melt(as.array(P_pred[obs,,2,2])); colnames(df_P_pred_2) <- c('ID', 'time', 'P_pred_2')
df_eta1_pred_1_band <- cbind(df_eta1_pred_1, low=df_eta1_pred_1$eta1_pred_1 - 2 * sqrt(df_P_pred_1$P_pred_1 / Nt), high=df_eta1_pred_1$eta1_pred_1 + 2 * sqrt(df_P_pred_1$P_pred_1 / Nt))
df_eta1_pred_2_band <- cbind(df_eta1_pred_2, low=df_eta1_pred_2$eta1_pred_2 - 2 * sqrt(df_P_pred_2$P_pred_2 / Nt), high=df_eta1_pred_2$eta1_pred_2 + 2 * sqrt(df_P_pred_2$P_pred_2 / Nt))
plot_eta1_pred_1_band <- ggplot(data=df_eta1_pred_1_band, aes(time, eta1_pred_1, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') + geom_line(size=.5) + theme(legend.position='none')
plot_eta1_pred_2_band <- ggplot(data=df_eta1_pred_2_band, aes(time, eta1_pred_2, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') + geom_line(size=.5) + theme(legend.position='none')
df_eta1_diff_1_band <- df_eta1_pred_1_band; colnames(df_eta1_diff_1_band)[3] <- c('eta1_diff_1')
df_eta1_diff_1_band$eta1_diff_1 <- df_eta1_diff_1_band$eta1_diff_1 - df_eta1_1$eta1_1
df_eta1_diff_1_band$low <- df_eta1_diff_1_band$low - df_eta1_1$eta1_1
df_eta1_diff_1_band$high <- df_eta1_diff_1_band$high - df_eta1_1$eta1_1
df_eta1_diff_2_band <- df_eta1_pred_2_band; colnames(df_eta1_diff_2_band)[3] <- c('eta1_diff_2')
df_eta1_diff_2_band$eta1_diff_2 <- df_eta1_diff_2_band$eta1_diff_2 - df_eta1_2$eta1_2
df_eta1_diff_2_band$low <- df_eta1_diff_2_band$low - df_eta1_2$eta1_2
df_eta1_diff_2_band$high <- df_eta1_diff_2_band$high - df_eta1_2$eta1_2
plot_eta1_diff_1_band <- ggplot(data=df_eta1_diff_1_band, aes(time, eta1_diff_1, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') +  geom_line(size=.5) + theme(legend.position='none')
plot_eta1_diff_2_band <- ggplot(data=df_eta1_diff_2_band, aes(time, eta1_diff_2, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') + geom_line(size=.5) + theme(legend.position='none')
plot_grid(plot_eta1_1, plot_eta1_pred_1_band, plot_eta1_diff_1_band, plot_eta1_2, plot_eta1_pred_2_band, plot_eta1_diff_2_band, labels='AUTO')
df_eta1_diff2_1 <- melt(as.numeric(as.array(eta1_pred[,,1]) - df$eta1[,,1])); colnames(df_eta1_diff2_1) <- c('eta1_diff2_1')
plot_eta1_diff2_1 <- ggplot(data=df_eta1_diff2_1, aes(x=eta1_diff2_1)) + geom_histogram(binwidth=.05)
df_eta1_diff2_2 <- melt(as.numeric(as.array(eta1_pred[,,2]) - df$eta1[,,2])); colnames(df_eta1_diff2_2) <- c('eta1_diff2_2')
plot_eta1_diff2_2 <- ggplot(data=df_eta1_diff2_2, aes(x=eta1_diff2_2)) + geom_histogram(binwidth=.05)
plot_grid(plot_eta1_diff2_1, plot_eta1_diff2_2, labels='AUTO')
# plot of the inter-individual latent score predictions
df_eta2_pred <- melt(as.array(eta2)); colnames(df_eta2_pred) <- c('eta2_pred')
plot_eta2_pred <- ggplot(data=df_eta2_pred, aes(x=eta2_pred)) + geom_histogram(binwidth=.05)
plot_grid(plot_eta2, plot_eta2_pred, labels='AUTO')
# plot of the intra-individual latent score predictions
# df_eta1 <- melt(as.array(eta1_sm[3:4,(Nt-20):(Nt-1),1])); colnames(df_eta1) <- c('ID', 'time', 'eta1')
# plot_eta1 <- ggplot(data=df_eta1, aes(time, eta1, group=ID, color=as.factor(ID))) + geom_line() + ylim(-3, 3) + theme(legend.position='none')
# plot_grid(plot_eta1, labels = "AUTO")
# contingency table
cTable1 <- table(S, round(as.array(DO)))
cTable1
sensitivity1 <- cTable1[1,1] / sum(cTable1[1,])
sensitivity1
specificity1 <- cTable1[2,2] / sum(cTable1[2,])
specificity1
load('50x50.RData')
thetaBest <- mylist_50x50
set.seed(42)
# install.packages("reshape")
library(reshape)
# install.packages("ggplot2")
library(ggplot2)
# install.packages("plotly")
library(plotly)
# install.packages("sigmoid")
library(sigmoid)
# install.packages("Rlab")
library(Rlab)
# install.packages('cowplot')
library(cowplot)
N <- 50 # try for 25, 50, 100
Nt <- 50 # try for 25, 50
O1 <- 6
O2 <- 3
L1 <- 2
y1 <- eps1 <- array(NA, c(N, Nt, O1))
y2 <- eps2 <- array(NA, c(N, O2))
eta1 <- zeta1 <- array(NA, c(N, Nt, L1))
eta2 <- zeta2 <- array(NA, N)
S <- array(NA, c(N, Nt))
alpha21 <- array(NA, c(L1, 2))
beta2 <- array(NA, c(L1,2))
B1 <- array(NA, c(L1, 2))
Lmd10 <- array(NA, c(O1, L1))
Lmd2 <- array(NA, O2)
S[,1] <- 1
eps1_var <- rep(.3, O1)
eps2_var <- rep(.3, O2)
zeta1_var <- rep(.1, L1)
zeta2_var <- .1
eta1_var <- rep(.1, L1)
eta2_var <- .1
alpha21[,1] <- c(.2, .3)
alpha21[,2] <- c(-.1, -.2)
beta2[,1] <- c(.1, .1)
beta2[,2] <- c(-.1 -.1)
B1[,1] <- rep(0.8, L1)
B1[,2] <- rep(0.4, L1)
Lmd10[,1] <- c(1, .4, .8, 0, 0, 0)
Lmd10[,2] <- c(0, 0, 0, 1, .5, 1.2)
Lmd2[] <- c(1, 1.1, .8)
gamma1 <- 3.5
gamma2 <- rep(1, 2)
gamma3 <- 0
gamma4 <- rep(0, 2)
P12 = 0
for (l1 in 1:L1) {eta1[, 1, l1] <- rnorm(N, 0, eta1_var[l1])}
eta2[] <- rnorm(N, 0, eta2_var)
for (l1 in 1:L1) {zeta1[, , l1] <- rnorm(N*Nt, 0, zeta1_var[l1])}
zeta2[] <- rnorm(N, 0, zeta2_var)
for (o1 in 1:O1) {eps1[, , o1] <- rnorm(N, 0, eps1_var[o1])}
for (o2 in 1:O2) {eps2[, o2] <- rnorm(N, 0, eps2_var[o2])}
for (i in 1:N) {
y2[i,] <- Lmd2 * eta2[i] + eps2[i,]
y1[i,1,] <- Lmd10 %*% eta1[i,1,] + eps1[i,1,] }
for (t in 2:Nt) {
for (i in 1:N) {
# Markov switching model
if (S[i,t-1] == 1) {pr <- sigmoid(gamma1 + gamma2 %*% eta1[i,t-1,] + gamma3 * eta2[i] + gamma4 %*% eta1[i,t-1,] * eta2[i])
} else {pr <- P12}
S[i,t] <- 2 - rbern(1, pr)
# Structural model
eta1[i,t,] <- alpha21[,S[i,t]] + beta2[,S[i,t]] * eta2[i] + diag(B1[,S[i,t]]) %*% eta1[i,t-1,] + zeta1[i,t,] + zeta2[i]
# Measurement model
y1[i,t,] <- Lmd10 %*% eta1[i,t,] + eps1[i,t,] } }
table(S)
table(S[,Nt])
# plot(eta1[1,,1])
# hist(eta1[,50,1])
set.seed(5)
obs <- sample(1:N, 2)
df_S_sampled <- df_S[df_S$ID %in% obs,]
df_S$ID <- as.factor(df_S$ID)
ggplot(data=df_S_sampled, aes(time, S, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position=c(0.2, 0.85))
df <- list(y1=y1, y2=y2, N=N, Nt=Nt, O1=O1, O2=O2, L1=L1,
eta1_true=eta1, eta2_true=eta2,
B11_true=alpha21[,1], B12_true=alpha21[,2],
B21d_true=B1[,1], B22d_true=B1[,2],
B31_true=beta2[,1], B32_true=beta2[,2],
Lmdd_true=Lmd10, Qd_true=zeta1_var+zeta2_var,
Rd_true=eps1_var, gamma1_true=gamma1, gamma2_true=gamma2,
gamma3_true=gamma3, gamma4_true=gamma4)
# some visualizations of the simulated data
df_eta1_1 <- melt(df$eta1_true[obs,,1]); colnames(df_eta1_1) <- c('ID', 'time', 'eta1_1')
df_eta1_2 <- melt(df$eta1_true[obs,,2]); colnames(df_eta1_2) <- c('ID', 'time', 'eta1_2')
df_eta1_1$ID[df_eta1_1$ID==1] <- obs[1]
df_eta1_1$ID[df_eta1_1$ID==2] <- obs[2]
df_eta1_2$ID[df_eta1_2$ID==1] <- obs[1]
df_eta1_2$ID[df_eta1_2$ID==2] <- obs[2]
df_eta1_1$ID <- as.factor(df_eta1_1$ID)
df_eta1_2$ID <- as.factor(df_eta1_2$ID)
plot_eta1_1 <- ggplot(data=df_eta1_1, aes(time, eta1_1, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position=c(0.75, 0.45))
plot_eta1_2 <- ggplot(data=df_eta1_2, aes(time, eta1_2, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position=c(0.75, 0.45))
plot_grid(plot_eta1_1, plot_eta1_2, labels='AUTO')
df_y1_1 <- melt(df$y1[obs,,1]); colnames(df_y1_1) <- c('ID', 'time', 'y1_1')
df_y1_2 <- melt(df$y1[obs,,2]); colnames(df_y1_2) <- c('ID', 'time', 'y1_2')
df_y1_3 <- melt(df$y1[obs,,3]); colnames(df_y1_3) <- c('ID', 'time', 'y1_3')
df_y1_4 <- melt(df$y1[obs,,4]); colnames(df_y1_4) <- c('ID', 'time', 'y1_4')
df_y1_5 <- melt(df$y1[obs,,5]); colnames(df_y1_5) <- c('ID', 'time', 'y1_5')
df_y1_6 <- melt(df$y1[obs,,6]); colnames(df_y1_6) <- c('ID', 'time', 'y1_6')
df_y1_1$ID[df_y1_1$ID==1] <- obs[1]
df_y1_1$ID[df_y1_1$ID==2] <- obs[2]
df_y1_2$ID[df_y1_2$ID==1] <- obs[1]
df_y1_2$ID[df_y1_2$ID==2] <- obs[2]
df_y1_3$ID[df_y1_3$ID==1] <- obs[1]
df_y1_3$ID[df_y1_3$ID==2] <- obs[2]
df_y1_4$ID[df_y1_4$ID==1] <- obs[1]
df_y1_4$ID[df_y1_4$ID==2] <- obs[2]
df_y1_5$ID[df_y1_5$ID==1] <- obs[1]
df_y1_5$ID[df_y1_5$ID==2] <- obs[2]
df_y1_6$ID[df_y1_6$ID==1] <- obs[1]
df_y1_6$ID[df_y1_6$ID==2] <- obs[2]
df_y1_1$ID <- as.factor(df_y1_1$ID)
df_y1_2$ID <- as.factor(df_y1_2$ID)
df_y1_3$ID <- as.factor(df_y1_3$ID)
df_y1_4$ID <- as.factor(df_y1_4$ID)
df_y1_5$ID <- as.factor(df_y1_5$ID)
df_y1_6$ID <- as.factor(df_y1_6$ID)
plot_y1_1 <- ggplot(data=df_y1_1, aes(time, y1_1, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position='none')
plot_y1_2 <- ggplot(data=df_y1_2, aes(time, y1_2, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position='none')
plot_y1_3 <- ggplot(data=df_y1_3, aes(time, y1_3, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position='none')
plot_y1_4 <- ggplot(data=df_y1_4, aes(time, y1_4, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position='none')
plot_y1_5 <- ggplot(data=df_y1_5, aes(time, y1_5, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position='none')
plot_y1_6 <- ggplot(data=df_y1_6, aes(time, y1_6, group=ID, color=ID)) + geom_line(size=.5) + theme(legend.position='none')
plot_grid(plot_y1_1, plot_y1_2, plot_y1_3, plot_y1_4, plot_y1_5, plot_y1_6, labels='AUTO')
df_eta2 <- melt(df$eta2_true); colnames(df_eta2) <- c('ID', 'eta2')
plot_eta2 <- ggplot(data=df_eta2, aes(x=eta2)) + geom_histogram(binwidth=.03)
df_y2_1 <- melt(df$y2[,1]); colnames(df_y2_1) <- c('y2_1')
df_y2_2 <- melt(df$y2[,2]); colnames(df_y2_2) <- c('y2_2')
df_y2_3 <- melt(df$y2[,3]); colnames(df_y2_3) <- c('y2_3')
plot_y2_1 <- ggplot(data=df_y2_1, aes(x=y2_1)) + geom_histogram(binwidth=.06)
plot_y2_2 <- ggplot(data=df_y2_2, aes(x=y2_2)) + geom_histogram(binwidth=.06)
plot_y2_3 <- ggplot(data=df_y2_3, aes(x=y2_3)) + geom_histogram(binwidth=.057)
plot_grid(plot_y2_1, plot_y2_2, plot_y2_3, labels='AUTO')
# install.packages('lavaan')
library(lavaan)
# install.packages('torch')
library(torch)
lEpsilon <- 1e-3
sEpsilon <- 1e-8
y1 <- df$y1
y2 <- df$y2
N <- df$N
Nt <- df$Nt
O1 <- df$O1
O2 <- df$O2
L1 <- df$L1
#####################
# Measurement model #
#####################
model_cfa <- '
# latent variables
lv =~ ov1 + ov2 + ov3 '
y2_df <- as.data.frame(y2)
colnames(y2_df) <- c('ov1', 'ov2', 'ov3')
fit_cfa <- cfa(model_cfa, data=y2_df)
eta2_score <- lavPredict(fit_cfa, method='Bartlett')
eta2 <- as.array(eta2_score[,1])
y1 <- torch_tensor(y1)
eta2 <- torch_tensor(eta2)
B11 <- torch_tensor(thetaBest$B11)
B12 <- torch_tensor(thetaBest$B12)
B21d <- torch_tensor(thetaBest$B21d)
B22d <- torch_tensor(thetaBest$B22d)
B31 <- torch_tensor(thetaBest$B31)
B32 <- torch_tensor(thetaBest$B32)
Lmdd <- torch_tensor(thetaBest$Lmdd); Lmdd[c(1,8)] <- 1; Lmdd[c(2,4,6,7,9,11)] <- 0
Qd <- torch_tensor(thetaBest$Qd); Qd$clip_(min=lEpsilon)
Rd <- torch_tensor(thetaBest$Rd); Rd$clip_(min=lEpsilon)
gamma1 <- torch_tensor(thetaBest$gamma1)
gamma2 <- torch_tensor(thetaBest$gamma2)
gamma3 <- torch_tensor(0)
gamma4 <- torch_tensor(rep(0, L1))
thetaBest <- list(B11=B11, B12=B12, B21d=B21d, B22d=B22d, B31=B31, B32=B32,
Lmdd=Lmdd, Qd=Qd, Rd=Rd, gamma1=gamma1, gamma2=gamma2)
jEta <- torch_full(c(N,Nt,2,2,L1), NaN)
jP <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
jV <- torch_full(c(N,Nt,2,2,O1), NaN)
jF <- torch_full(c(N,Nt,2,2,O1,O1), NaN)
jEta2 <- torch_full(c(N,Nt,2,2,L1), NaN)
jP2 <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
mEta <- torch_full(c(N,Nt+1,2,L1), NaN)
mP <- torch_full(c(N,Nt+1,2,L1,L1), NaN)
W <- torch_full(c(N,Nt,2,2), NaN)
jPr <- torch_full(c(N,Nt,2,2), NaN)
mLik <- torch_full(c(N,Nt), NaN)
jPr2 <- torch_full(c(N,Nt,2,2), NaN)
mPr <- torch_full(c(N,Nt+1), NaN)
jLik <- torch_full(c(N,Nt,2,2), NaN)
tPr <- torch_full(c(N,Nt,2), NaN)
KG <- torch_full(c(N,Nt,2,2,L1,O1), NaN)
I_KGLmd <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
denom1 <- torch_full(c(N,Nt), NaN)
denom2 <- torch_full(c(N,Nt), NaN)
subEta <- torch_full(c(N,Nt,2,2,L1), NaN)
subEtaSq <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
eta1_pred <- torch_full(c(N,Nt,L1), NaN)
mEta[,1,,] <- 0
mP[,1,,,] <- torch_eye(L1)
mPr[,1] <- 1
W[,,1,1] <- 1
B21 <- B21d$clone()$diag()
B22 <- B22d$clone()$diag()
Lmd <- Lmdd$clone()$reshape(c(O1, L1))
Lmd1 <- Lmd$clone()
Lmd2 <- Lmd$clone()
Q1 <- Qd$clone()$diag()
Q2 <- Qd$clone()$diag()
R1 <- Rd$clone()$diag()
R2 <- Rd$clone()$diag()
##########################################
# Kim filter (using the best parameters) #
##########################################
for (t in 1:Nt) {
jEta[,t,1,1,] <- B11$clone() + mEta[,t,1,]$clone()$matmul(B21$clone()) + eta2$clone()$outer(B31$clone())
jEta[,t,2,1,] <- B12$clone() + mEta[,t,1,]$clone()$matmul(B22$clone()) + eta2$clone()$outer(B32$clone())
jEta[,t,2,2,] <- B12$clone() + mEta[,t,2,]$clone()$matmul(B22$clone()) + eta2$clone()$outer(B32$clone())
jP[,t,1,1,,] <- B21$clone()$matmul(mP[,t,1,,]$clone())$matmul(B21$clone()) + Q1$clone()
jP[,t,2,1,,] <- B22$clone()$matmul(mP[,t,1,,]$clone())$matmul(B22$clone()) + Q2$clone()
jP[,t,2,2,,] <- B22$clone()$matmul(mP[,t,2,,]$clone())$matmul(B22$clone()) + Q2$clone()
jV[,t,1,1,] <- y1[,t,]$clone() - jEta[,t,1,1,]$clone()$matmul(Lmd1$clone()$transpose(1, 2))
jV[,t,2,1,] <- y1[,t,]$clone() - jEta[,t,2,1,]$clone()$matmul(Lmd2$clone()$transpose(1, 2))
jV[,t,2,2,] <- y1[,t,]$clone() - jEta[,t,2,2,]$clone()$matmul(Lmd2$clone()$transpose(1, 2))
jF[,t,1,1,,] <- Lmd1$clone()$matmul(jP[,t,1,1,,]$clone())$matmul(Lmd1$clone()$transpose(1, 2)) + R1$clone()
jF[,t,2,1,,] <- Lmd2$clone()$matmul(jP[,t,2,1,,]$clone())$matmul(Lmd1$clone()$transpose(1, 2)) + R2$clone()
jF[,t,2,2,,] <- Lmd2$clone()$matmul(jP[,t,2,2,,]$clone())$matmul(Lmd2$clone()$transpose(1, 2)) + R2$clone()
KG[,t,1,1,,] <- jP[,t,1,1,,]$clone()$matmul(Lmd1$clone()$transpose(1, 2))$matmul(jF[,t,1,1,,]$clone()$cholesky_inverse())
KG[,t,2,1,,] <- jP[,t,2,1,,]$clone()$matmul(Lmd2$clone()$transpose(1, 2))$matmul(jF[,t,2,1,,]$clone()$cholesky_inverse())
KG[,t,2,2,,] <- jP[,t,2,2,,]$clone()$matmul(Lmd2$clone()$transpose(1, 2))$matmul(jF[,t,2,2,,]$clone()$cholesky_inverse())
jEta2[,t,1,1,] <- jEta[,t,1,1,]$clone() + KG[,t,1,1,,]$clone()$matmul(jV[,t,1,1,]$clone()$unsqueeze(-1))$squeeze()
jEta2[,t,2,1,] <- jEta[,t,2,1,]$clone() + KG[,t,2,1,,]$clone()$matmul(jV[,t,2,1,]$clone()$unsqueeze(-1))$squeeze()
jEta2[,t,2,2,] <- jEta[,t,2,2,]$clone() + KG[,t,2,2,,]$clone()$matmul(jV[,t,2,2,]$clone()$unsqueeze(-1))$squeeze()
I_KGLmd[,t,1,1,,] <- torch_eye(L1) - KG[,t,1,1,,]$clone()$matmul(Lmd1$clone())
I_KGLmd[,t,2,1,,] <- torch_eye(L1) - KG[,t,2,1,,]$clone()$matmul(Lmd2$clone())
I_KGLmd[,t,2,2,,] <- torch_eye(L1) - KG[,t,2,2,,]$clone()$matmul(Lmd2$clone())
jP2[,t,1,1,,] <- I_KGLmd[,t,1,1,,]$clone()$matmul(jP[,t,1,1,,]$clone())$matmul(I_KGLmd[,t,1,1,,]$clone()$transpose(2, 3)) +
KG[,t,1,1,,]$clone()$matmul(R1$clone())$matmul(KG[,t,1,1,,]$clone()$transpose(2, 3))
jP2[,t,2,1,,] <- I_KGLmd[,t,2,1,,]$clone()$matmul(jP[,t,2,1,,]$clone())$matmul(I_KGLmd[,t,2,1,,]$clone()$transpose(2, 3)) +
KG[,t,2,1,,]$clone()$matmul(R2$clone())$matmul(KG[,t,2,1,,]$clone()$transpose(2, 3))
jP2[,t,2,2,,] <- I_KGLmd[,t,2,2,,]$clone()$matmul(jP[,t,2,2,,]$clone())$matmul(I_KGLmd[,t,2,2,,]$clone()$transpose(2, 3)) +
KG[,t,2,2,,]$clone()$matmul(R2$clone())$matmul(KG[,t,2,2,,]$clone()$transpose(2, 3))
jLik[,t,1,1] <- sEpsilon + (2*pi)**(-O1/2) * jF[,t,1,1,,]$clone()$det()**(-1) *
(-.5 * jV[,t,1,1,]$clone()$unsqueeze(2)$matmul(jF[,t,1,1,,]$clone()$cholesky_inverse())$matmul(jV[,t,1,1,]$clone()$unsqueeze(-1))$squeeze()$squeeze())$exp()
jLik[,t,2,1] <- sEpsilon + (2*pi)**(-O1/2) * jF[,t,2,1,,]$clone()$det()**(-1) *
(-.5 * jV[,t,2,1,]$clone()$unsqueeze(2)$matmul(jF[,t,2,1,,]$clone()$cholesky_inverse())$matmul(jV[,t,2,1,]$clone()$unsqueeze(-1))$squeeze()$squeeze())$exp()
jLik[,t,2,2] <- sEpsilon + (2*pi)**(-O1/2) * jF[,t,2,2,,]$clone()$det()**(-1) *
(-.5 * jV[,t,2,2,]$clone()$unsqueeze(2)$matmul(jF[,t,2,2,,]$clone()$cholesky_inverse())$matmul(jV[,t,2,2,]$clone()$unsqueeze(-1))$squeeze()$squeeze())$exp()
if (t == 1) {tPr[,t,1] <- (gamma1$clone() + gamma3$clone() * eta2$clone())$sigmoid()
} else {
eta1_pred[,t-1,] <- mPr[,t]$clone()$unsqueeze(-1) * mEta[,t,1,]$clone() + (1 - mPr[,t]$clone())$unsqueeze(-1) * mEta[,t,2,]$clone()
tPr[,t,1] <- (gamma1$clone() + eta1_pred[,t-1,]$clone()$matmul(gamma2$clone()) + gamma3$clone() * eta2$clone() + eta1_pred[,t-1,]$clone()$matmul(gamma4$clone()) * eta2$clone())$sigmoid() }
jPr[,t,1,1] <- tPr[,t,1]$clone()$clip(min=lEpsilon, max=1-lEpsilon) * mPr[,t]$clone()$clip(min=lEpsilon, max=1-lEpsilon)
jPr[,t,2,1] <- (1 - tPr[,t,1]$clone()$clip(min=lEpsilon, max=1-sEpsilon)) * mPr[,t]$clone()$clip(min=lEpsilon, max=1-lEpsilon)
jPr[,t,2,2] <- (1 - mPr[,t]$clone()$clip(min=lEpsilon, max=1-lEpsilon))
mLik[,t] <- jLik[,t,1,1]$clone() * jPr[,t,1,1]$clone() +
jLik[,t,2,1]$clone() * jPr[,t,2,1]$clone() +
jLik[,t,2,2]$clone() * jPr[,t,2,2]$clone()
jPr2[,t,1,1] <- jLik[,t,1,1]$clone() * jPr[,t,1,1]$clone() / mLik[,t]$clone()
jPr2[,t,2,1] <- jLik[,t,2,1]$clone() * jPr[,t,2,1]$clone() / mLik[,t]$clone()
jPr2[,t,2,2] <- jLik[,t,2,2]$clone() * jPr[,t,2,2]$clone() / mLik[,t]$clone()
mPr[,t+1] <- jPr2[,t,1,1]$clone()$clip(min=lEpsilon, max=1-lEpsilon)
W[,t,2,1] <- jPr2[,t,2,1]$clone() / (1 - mPr[,t+1]$clone())
W[,t,2,2] <- jPr2[,t,2,2]$clone() / (1 - mPr[,t+1]$clone())
mEta[,t+1,1,] <- jEta2[,t,1,1,]$clone()
mEta[,t+1,2,] <- (W[,t,2,]$clone()$unsqueeze(-1) * jEta2[,t,2,,]$clone())$sum(2)
subEta[,t,1,1,] <- mEta[,t+1,1,]$clone() - jEta2[,t,1,1,]$clone()
subEta[,t,2,1,] <- mEta[,t+1,2,]$clone() - jEta2[,t,2,1,]$clone()
subEta[,t,2,2,] <- mEta[,t+1,2,]$clone() - jEta2[,t,2,2,]$clone()
subEtaSq[,t,1,1,,] <- subEta[,t,1,1,]$clone()$unsqueeze(-1)$matmul(subEta[,t,1,1,]$clone()$unsqueeze(-2))
subEtaSq[,t,2,1,,] <- subEta[,t,2,1,]$clone()$unsqueeze(-1)$matmul(subEta[,t,2,1,]$clone()$unsqueeze(-2))
subEtaSq[,t,2,2,,] <- subEta[,t,2,2,]$clone()$unsqueeze(-1)$matmul(subEta[,t,2,2,]$clone()$unsqueeze(-2))
mP[,t+1,1,,] <- jP2[,t,1,1,,]$clone() + subEtaSq[,t,1,1,,]$clone()
mP[,t+1,2,,] <- (W[,t,2,]$clone()$unsqueeze(-1)$unsqueeze(-1) * (jP2[,t,2,,,]$clone() + subEtaSq[,t,2,,,]$clone()))$sum(2) }
jPr3 <- torch_full(c(N,Nt,2,2), NaN)
mPr2 <- torch_full(c(N,Nt+1), NaN)
jEta3 <- torch_full(c(N,Nt,2,2,L1), NaN)
jP3 <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
jPtilde <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
mEta2 <- torch_full(c(N,Nt+1,2,L1), NaN)
mP2 <- torch_full(c(N,Nt+1,2,L1,L1), NaN)
subEta2 <- torch_full(c(N,Nt,2,2,L1), NaN)
subEtaSq2 <- torch_full(c(N,Nt,2,2,L1,L1), NaN)
eta1_sm <- torch_full(c(N,Nt,L1), NaN)
P_sm <- torch_full(c(N,Nt,L1,L1), NaN)
subEta3 <- torch_full(c(N,Nt,2,L1), NaN)
subEtaSq3 <- torch_full(c(N,Nt,2,L1,L1), NaN)
mPr2[,Nt+1] <- mPr[,Nt+1]$clone()
mEta2[,Nt+1,,] <- mEta[,Nt+1,,]$clone()
mP2[,Nt+1,,] <- mP[,Nt+1,,]$clone()
################
# Kim smoother #
################
for (t in (Nt-1):1) {
jPr3[,t+1,1,1] <- mPr2[,t+2]$clone() * mPr[,t+1]$clone() * tPr[,t+1,1]$clone() / jPr[,t+1,1,1]$clone()
jPr3[,t+1,2,1] <- (1 - mPr2[,t+2]$clone()) * mPr[,t+1]$clone() * (1 - tPr[,t+1,1]$clone()) / jPr[,t+1,2,]$clone()$sum(2)
jPr3[,t+1,2,2] <- (1 - mPr2[,t+2]$clone()) * (1 - mPr[,t+1]$clone()) / jPr[,t+1,2,]$clone()$sum(2)
mPr2[,t+1] <- jPr3[,t+1,,1]$clone()$sum(2)$clip(min=lEpsilon, max=1-lEpsilon)
jPtilde[,t,1,1,,] <- mP[,t+1,1,,]$clone()$matmul(B21$clone())$matmul(jP[,t+1,1,1,,]$clone()$cholesky_inverse())
jPtilde[,t,2,1,,] <- mP[,t+1,1,,]$clone()$matmul(B22$clone())$matmul(jP[,t+1,2,1,,]$clone()$cholesky_inverse())
jPtilde[,t,2,2,,] <- mP[,t+1,2,,]$clone()$matmul(B22$clone())$matmul(jP[,t+1,2,2,,]$clone()$cholesky_inverse())
jEta3[,t,1,1,] <- mEta[,t+1,1,]$clone() + (mEta2[,t+2,1,]$clone() - jEta[,t+1,1,1,]$clone())$unsqueeze(-2)$matmul(jPtilde[,t,1,1,,]$clone())$squeeze()
jEta3[,t,2,1,] <- mEta[,t+1,2,]$clone() + (mEta2[,t+2,2,]$clone() - jEta[,t+1,2,1,]$clone())$unsqueeze(-2)$matmul(jPtilde[,t,2,1,,]$clone())$squeeze()
jEta3[,t,2,2,] <- mEta[,t+1,2,]$clone() + (mEta2[,t+2,2,]$clone() - jEta[,t+1,2,2,]$clone())$unsqueeze(-2)$matmul(jPtilde[,t,2,2,,]$clone())$squeeze()
jP3[,t,1,1,,] <- mP[,t+1,1,,]$clone() + jPtilde[,t,1,1,,]$clone()$matmul(mP2[,t+2,1,,]$clone() - jP[,t+1,1,1,,])$matmul(jPtilde[,t,1,1,,]$clone())
jP3[,t,2,1,,] <- mP[,t+1,2,,]$clone() + jPtilde[,t,2,1,,]$clone()$matmul(mP2[,t+2,2,,]$clone() - jP[,t+1,2,1,,])$matmul(jPtilde[,t,2,1,,]$clone())
jP3[,t,2,2,,] <- mP[,t+1,2,,]$clone() + jPtilde[,t,2,2,,]$clone()$matmul(mP2[,t+2,2,,]$clone() - jP[,t+1,2,2,,])$matmul(jPtilde[,t,2,2,,]$clone())
mEta2[,t+1,1,] <- (jPr3[,t+1,1,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1) * jEta3[,t,1,1,]$clone() + (jPr3[,t+1,2,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1) * jEta3[,t,2,1,]$clone()
mEta2[,t+1,2,] <- (jPr3[,t+1,2,2]$clone() / (1 - mPr2[,t+1]$clone()))$unsqueeze(-1) * jEta3[,t,2,2,]$clone()
subEta2[,t,1,1,] <- mEta2[,t+1,1,]$clone() - jEta3[,t,1,1,]$clone()
subEta2[,t,2,1,] <- mEta2[,t+1,1,]$clone() - jEta3[,t,2,1,]$clone()
subEta2[,t,2,2,] <- mEta2[,t+1,2,]$clone() - jEta3[,t,2,2,]$clone()
subEtaSq2[,t,1,1,,] <- subEta2[,t,1,1,]$clone()$unsqueeze(-1)$matmul(subEta2[,t,1,1,]$clone()$unsqueeze(-2))
subEtaSq2[,t,2,1,,] <- subEta2[,t,2,1,]$clone()$unsqueeze(-1)$matmul(subEta2[,t,2,1,]$clone()$unsqueeze(-2))
subEtaSq2[,t,2,2,,] <- subEta2[,t,2,2,]$clone()$unsqueeze(-1)$matmul(subEta2[,t,2,2,]$clone()$unsqueeze(-2))
mP2[,t+1,1,,] <- (jPr3[,t+1,1,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1)$unsqueeze(-1) * (jP3[,t,1,1,,]$clone() + subEtaSq2[,t,1,1,,]$clone()) + (jPr3[,t+1,2,1]$clone() / mPr2[,t+1]$clone())$unsqueeze(-1)$unsqueeze(-1) * (jP3[,t,2,1,,]$clone() + subEtaSq2[,t,2,1,,]$clone())
mP2[,t+1,2,,] <- (jPr3[,t+1,2,2]$clone() / (1 - mPr2[,t+1]$clone()))$unsqueeze(-1)$unsqueeze(-1) * (jP3[,t,2,2,,]$clone() + subEtaSq2[,t,2,2,,]$clone())
eta1_sm[,t,] <- mPr2[,t+1]$clone()$unsqueeze(-1) * mEta2[,t+1,1,]$clone() + (1 - mPr2[,t+1]$clone())$unsqueeze(-1) * mEta2[,t+1,2,]$clone()
subEta3[,t,1,] <- eta1_sm[,t,]$clone() - mEta2[,t+1,1,]$clone()
subEta3[,t,2,] <- eta1_sm[,t,]$clone() - mEta2[,t+1,2,]$clone()
subEtaSq3[,t,1,,] <- subEta3[,t,1,]$clone()$unsqueeze(-1)$matmul(subEta3[,t,1,]$clone()$unsqueeze(-2))
subEtaSq3[,t,2,,] <- subEta3[,t,2,]$clone()$unsqueeze(-1)$matmul(subEta3[,t,2,]$clone()$unsqueeze(-2))
P_sm[,t,,] <- mPr2[,t+1]$clone()$unsqueeze(-1)$unsqueeze(-1) * (mP2[,t+1,1,,]$clone() + subEtaSq3[,t,1,,]$clone()) + (1 - mPr2[,t+1]$clone())$unsqueeze(-1)$unsqueeze(-1) * (mP2[,t+1,2,,]$clone() + subEtaSq3[,t,2,,]$clone()) }
# score function
delta <- as.numeric(torch_sum(eta1_pred - df$eta1_true)**2)
# information criterion
# q <- length(torch_cat(thetaBest)) - 8
# AIC <- -2 * log(sumLikBest) + 2 * q
# BIC <- -2 * log(sumLikBest) + q * log(N * Nt)
# evaluation of the regime prediction
DO <- 2 - mPr[,2:(Nt+1)]
DO2 <- 2 - mPr2[,2:(Nt+1)]
df_S <- melt(S); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr_diff <- melt(as.array(DO2  > 1.5) + 1); colnames(df_Pr_diff) <- c('ID', 'time', 'S')
df_Pr_diff$S <- abs(df_Pr_diff$S - df_S$S)
plot_Pr_diff <- ggplot(data=df_Pr_diff, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, plot_Pr_diff, labels = "AUTO")
# contingency table
cTable1 <- table(S, round(as.array(DO)))
sensitivity1 <- cTable1[1,1] / sum(cTable1[1,])
specificity1 <- cTable1[2,2] / sum(cTable1[2,])
# table(S[,Nt], round(as.array(DO[,Nt])))
cTable2 <- table(S, round(as.array(DO2)))
sensitivity2 <- cTable2[1,1] / sum(cTable2[1,])
specificity2 <- cTable2[2,2] / sum(cTable2[2,])
# table(S[,Nt], round(as.array(DO2[,Nt])))
# mean score function
delta <- sum((as.array(eta1_pred) - eta1)**2)
delta_NT <- delta / (N * Nt)
# plot of the intra-individual latent score predictions
eta1_pred[,Nt,] <- mPr[,Nt+1]$clone()$unsqueeze(-1) * mEta[,Nt+1,1,]$clone() + (1 - mPr[,Nt+1]$clone())$unsqueeze(-1) * mEta[,Nt+1,2,]$clone()
P_pred <- mPr[,2:(Nt+1)]$clone()$unsqueeze(-1)$unsqueeze(-1) * mP[,2:(Nt+1),1,,]$clone() + (1 - mPr[,2:(Nt+1)]$clone())$unsqueeze(-1)$unsqueeze(-1) * mP[,2:(Nt+1),2,,]$clone()
obs <- sample(1:N, 2)
df_eta1_1 <- melt(df$eta1[obs,,1]); colnames(df_eta1_1) <- c('ID', 'time', 'eta1_1')
df_eta1_2 <- melt(df$eta1[obs,,2]); colnames(df_eta1_2) <- c('ID', 'time', 'eta1_2')
plot_eta1_1 <- ggplot(data=df_eta1_1, aes(time, eta1_1, group=ID, color=as.factor(ID))) + geom_line(size=.5) + theme(legend.position='none')
plot_eta1_2 <- ggplot(data=df_eta1_2, aes(time, eta1_2, group=ID, color=as.factor(ID))) + geom_line(size=.5) + theme(legend.position='none')
df_eta1_pred_1 <- melt(as.array(eta1_pred[obs,,1])); colnames(df_eta1_pred_1) <- c('ID', 'time', 'eta1_pred_1')
df_eta1_pred_2 <- melt(as.array(eta1_pred[obs,,2])); colnames(df_eta1_pred_2) <- c('ID', 'time', 'eta1_pred_2')
df_P_pred_1 <- melt(as.array(P_pred[obs,,1,1])); colnames(df_P_pred_1) <- c('ID', 'time', 'P_pred_1')
df_P_pred_2 <- melt(as.array(P_pred[obs,,2,2])); colnames(df_P_pred_2) <- c('ID', 'time', 'P_pred_2')
df_eta1_pred_1_band <- cbind(df_eta1_pred_1, low=df_eta1_pred_1$eta1_pred_1 - 2 * sqrt(df_P_pred_1$P_pred_1 / Nt), high=df_eta1_pred_1$eta1_pred_1 + 2 * sqrt(df_P_pred_1$P_pred_1 / Nt))
df_eta1_pred_2_band <- cbind(df_eta1_pred_2, low=df_eta1_pred_2$eta1_pred_2 - 2 * sqrt(df_P_pred_2$P_pred_2 / Nt), high=df_eta1_pred_2$eta1_pred_2 + 2 * sqrt(df_P_pred_2$P_pred_2 / Nt))
plot_eta1_pred_1_band <- ggplot(data=df_eta1_pred_1_band, aes(time, eta1_pred_1, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') + geom_line(size=.5) + theme(legend.position='none')
plot_eta1_pred_2_band <- ggplot(data=df_eta1_pred_2_band, aes(time, eta1_pred_2, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') + geom_line(size=.5) + theme(legend.position='none')
df_eta1_diff_1_band <- df_eta1_pred_1_band; colnames(df_eta1_diff_1_band)[3] <- c('eta1_diff_1')
df_eta1_diff_1_band$eta1_diff_1 <- df_eta1_diff_1_band$eta1_diff_1 - df_eta1_1$eta1_1
df_eta1_diff_1_band$low <- df_eta1_diff_1_band$low - df_eta1_1$eta1_1
df_eta1_diff_1_band$high <- df_eta1_diff_1_band$high - df_eta1_1$eta1_1
df_eta1_diff_2_band <- df_eta1_pred_2_band; colnames(df_eta1_diff_2_band)[3] <- c('eta1_diff_2')
df_eta1_diff_2_band$eta1_diff_2 <- df_eta1_diff_2_band$eta1_diff_2 - df_eta1_2$eta1_2
df_eta1_diff_2_band$low <- df_eta1_diff_2_band$low - df_eta1_2$eta1_2
df_eta1_diff_2_band$high <- df_eta1_diff_2_band$high - df_eta1_2$eta1_2
plot_eta1_diff_1_band <- ggplot(data=df_eta1_diff_1_band, aes(time, eta1_diff_1, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') +  geom_line(size=.5) + theme(legend.position='none')
plot_eta1_diff_2_band <- ggplot(data=df_eta1_diff_2_band, aes(time, eta1_diff_2, group=ID, color=as.factor(ID))) + geom_ribbon(aes(ymin=low, ymax=high), color='grey70', fill='grey70') + geom_line(size=.5) + theme(legend.position='none')
plot_grid(plot_eta1_1, plot_eta1_pred_1_band, plot_eta1_diff_1_band, plot_eta1_2, plot_eta1_pred_2_band, plot_eta1_diff_2_band, labels='AUTO')
df_eta1_diff2_1 <- melt(as.numeric(as.array(eta1_pred[,,1]) - df$eta1[,,1])); colnames(df_eta1_diff2_1) <- c('eta1_diff2_1')
plot_eta1_diff2_1 <- ggplot(data=df_eta1_diff2_1, aes(x=eta1_diff2_1)) + geom_histogram(binwidth=.05)
df_eta1_diff2_2 <- melt(as.numeric(as.array(eta1_pred[,,2]) - df$eta1[,,2])); colnames(df_eta1_diff2_2) <- c('eta1_diff2_2')
plot_eta1_diff2_2 <- ggplot(data=df_eta1_diff2_2, aes(x=eta1_diff2_2)) + geom_histogram(binwidth=.05)
plot_grid(plot_eta1_diff2_1, plot_eta1_diff2_2, labels='AUTO')
# plot of the inter-individual latent score predictions
df_eta2_pred <- melt(as.array(eta2)); colnames(df_eta2_pred) <- c('eta2_pred')
plot_eta2_pred <- ggplot(data=df_eta2_pred, aes(x=eta2_pred)) + geom_histogram(binwidth=.05)
plot_grid(plot_eta2, plot_eta2_pred, labels='AUTO')
# plot of the intra-individual latent score predictions
# df_eta1 <- melt(as.array(eta1_sm[3:4,(Nt-20):(Nt-1),1])); colnames(df_eta1) <- c('ID', 'time', 'eta1')
# plot_eta1 <- ggplot(data=df_eta1, aes(time, eta1, group=ID, color=as.factor(ID))) + geom_line() + ylim(-3, 3) + theme(legend.position='none')
# plot_grid(plot_eta1, labels = "AUTO")
# contingency table
cTable1 <- table(S, round(as.array(DO)))
sensitivity1 <- cTable1[1,1] / sum(cTable1[1,])
specificity1 <- cTable1[2,2] / sum(cTable1[2,])
sensitivity1
specificity1
cTable2 <- table(S, round(as.array(DO2)))
sensitivity2 <- cTable2[1,1] / sum(cTable2[1,])
specificity2 <- cTable2[2,2] / sum(cTable2[2,])
sensitivity2
specificity2
# mean score function
delta <- sum((as.array(eta1_pred) - eta1)**2)
delta_NT <- delta / (N * Nt)
delta_NT
