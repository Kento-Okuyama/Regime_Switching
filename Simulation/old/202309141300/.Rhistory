###################
# Hamilton filter #
###################
eta1_pred[,t,] <- mPr[,t,1]$clone()$unsqueeze(-1) * mEta[,t,1,]$clone() + mPr[,t,2]$clone()$unsqueeze(-1) * mEta[,t,2,]$clone()
tPr[,t,1,1] <- (gamma1 + eta1_pred[,t,]$clone()$matmul(gamma2))$sigmoid()$clip(min=sEpsilon, max=1-sEpsilon)
tPr[,t,2,1] <- 1 - tPr[,t,1,1]
jPr[,t,,] <- tPr[,t,,]$clone() * mPr[,t,]$clone()$unsqueeze(-1)
mLik[,t] <- (jLik[,t,,]$clone() * jPr[,t,,]$clone())$sum(c(2,3))
jPr2[,t,,] <- jLik[,t,,]$clone() * jPr[,t,,]$clone() / mLik[,t]$clone()$unsqueeze(-1)$unsqueeze(-1)
mPr[,t+1,] <- jPr2[,t,,]$sum(3)$clip(min=sEpsilon, max=1-sEpsilon)
W[,t,,] <- jPr2[,t,,]$clone() / mPr[,t+1,]$clone()$unsqueeze(-1)
mEta[,t+1,,] <- (W[,t,,]$clone()$unsqueeze(-1) * jEta2[,t,,,]$clone())$sum(3)
subEta[,t,,,] <- mEta[,t+1,,]$unsqueeze(2) - jEta2[,t,,,]
mP[,t+1,,,] <- (W[,t,,]$clone()$unsqueeze(-1)$unsqueeze(-1) * (jP2[,t,,,,] + subEta[,t,,,]$clone()$unsqueeze(-1)$matmul(subEta[,t,,,]$clone()$unsqueeze(-2))))$sum(3) }
-mLik$sum()
for (t in 1:Nt) {
#################
# Kalman filter #
#################
jEta[,t,,,] <- B1$expand(c(N, -1, -1))$unsqueeze(-2) + mEta[,t,,]$clone()$unsqueeze(2)$matmul(B2) + eta2$unsqueeze(-1)$unsqueeze(-1)$unsqueeze(-1) * B3$expand(c(N, -1, -1))$unsqueeze(-2)
jP[,t,,,,] <- mP[,t,,,]$unsqueeze(2)$matmul(B2[2,,]**2) + Q$expand(c(N, 2, 2, -1, -1))
jV[,t,,,] <- y1[,t,]$unsqueeze(-2)$unsqueeze(-2) - jEta[,t,,,]$clone()$matmul(LmdT)
jF[,t,,,,] <- Lmd$matmul(jP[,t,,,,]$matmul(LmdT)) + R
KG[,t,,,,] <- jP[,t,,,,]$matmul(LmdT)$matmul(jF[,t,,,,]$clone()$cholesky_inverse())
jEta2[,t,,,] <- jEta[,t,,,] + KG[,t,,,,]$clone()$matmul(jV[,t,,,]$clone()$unsqueeze(-1))$squeeze()
I_KGLmd[,t,,,,] <- torch_eye(L1)$expand(c(N,2,2,-1,-1)) - KG[,t,,,,]$clone()$matmul(Lmd)
jP2[,t,,,,] <- I_KGLmd[,t,,,,]$clone()$matmul(jP[,t,,,,]$clone())$matmul(I_KGLmd[,t,,,,]$clone()$transpose(4, 5)) +
KG[,t,,,,]$clone()$matmul(R)$matmul(KG[,t,,,,]$clone()$transpose(4, 5))
jLik[,t,,] <- sEpsilon + const * ((jF[,t,,,,] + lEpsilon * torch_eye(6))$clone()$det() + lEpsilon)**(-1) *
(-.5 * jF[,t,,,,]$clone()$cholesky_inverse()$matmul(jV[,t,,,]$clone()$unsqueeze(-1))$squeeze()$unsqueeze(-2)$matmul(jV[,t,,,]$clone()$unsqueeze(-1))$squeeze()$squeeze())$exp()
###################
# Hamilton filter #
###################
eta1_pred[,t,] <- mPr[,t,1]$clone()$unsqueeze(-1) * mEta[,t,1,]$clone() + mPr[,t,2]$clone()$unsqueeze(-1) * mEta[,t,2,]$clone()
tPr[,t,1,1] <- (gamma1 + eta1_pred[,t,]$clone()$matmul(gamma2))$sigmoid()$clip(min=sEpsilon, max=1-sEpsilon)
tPr[,t,2,1] <- 1 - tPr[,t,1,1]
jPr[,t,,] <- tPr[,t,,]$clone() * mPr[,t,]$clone()$unsqueeze(-1)
mLik[,t] <- (jLik[,t,,]$clone() * jPr[,t,,]$clone())$sum(c(2,3))
jPr2[,t,,] <- jLik[,t,,]$clone() * jPr[,t,,]$clone() / mLik[,t]$clone()$unsqueeze(-1)$unsqueeze(-1)
mPr[,t+1,] <- jPr2[,t,,]$sum(3)$clip(min=sEpsilon, max=1-sEpsilon)
W[,t,,] <- jPr2[,t,,]$clone() / mPr[,t+1,]$clone()$unsqueeze(-1)
mEta[,t+1,,] <- (W[,t,,]$clone()$unsqueeze(-1) * jEta2[,t,,,]$clone())$sum(3)
subEta[,t,,,] <- mEta[,t+1,,]$unsqueeze(2) - jEta2[,t,,,]
mP[,t+1,,,] <- (W[,t,,]$clone()$unsqueeze(-1)$unsqueeze(-1) * (jP2[,t,,,,] + subEta[,t,,,]$clone()$unsqueeze(-1)$matmul(subEta[,t,,,]$clone()$unsqueeze(-2))))$sum(3) }
-mLik$sum()
-mLik$sum()
mLik$sum()
foreach(ind=1:nNT, .packages=c('reshape', 'ggplot2', 'plotly', 'sigmoid', 'Rlab', 'cowplot', 'lavaan', 'torch', 'reticulate', 'cowplot')) %:%
foreach(seed=1:200) %dopar% {
print(c(ind, seed))
# N <- N_vec[ind]
# Nt <- Nt_vec[ind]
# df <- DGP(seed, N, Nt, O1, O2, L1)
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# params <- filtering(seed, N, Nt, O1, O2, L1, df$y1, df$y2, nInit, maxIter)
params <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
output <- result(N, Nt, O1, O2, L1, df$y1, df$y2, params, df$S, df$eta1)
# saveRDS(df, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# saveRDS(params, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
saveRDS(output, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
}
nNT <- 6/6
nSim <- 200
foreach(ind=1:nNT, .packages=c('reshape', 'ggplot2', 'plotly', 'sigmoid', 'Rlab', 'cowplot', 'lavaan', 'torch', 'reticulate', 'cowplot')) %:%
foreach(seed=1:200) %dopar% {
print(c(ind, seed))
# N <- N_vec[ind]
# Nt <- Nt_vec[ind]
# df <- DGP(seed, N, Nt, O1, O2, L1)
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# params <- filtering(seed, N, Nt, O1, O2, L1, df$y1, df$y2, nInit, maxIter)
params <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
output <- result(N, Nt, O1, O2, L1, df$y1, df$y2, params, df$S, df$eta1)
# saveRDS(df, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# saveRDS(params, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
saveRDS(output, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
}
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300')
if (!requireNamespace('doParallel', quietly = TRUE)) {
install.packages('doParallel') }
# library(doParallel)
# cl <- makeCluster(7)
# registerDoParallel(cl)
# stopCluster(cl)
source('library_202309141300.R')
source('DGP_202309141300.R')
source('filtering_202309191300.R')
source('result_202309161300.R')
library_load()
# N_vec <- c(25)#, 25, 50, 50, 100, 100)
# Nt_vec <- c(25)#, 50, 25, 50, 25, 50)
O1 <- 6
O2 <- 3
L1 <- 2
nInit <- 30
maxIter <- 300
nNT <- 6/6
nSim <- 200
foreach(ind=1:nNT, .packages=c('reshape', 'ggplot2', 'plotly', 'sigmoid', 'Rlab', 'cowplot', 'lavaan', 'torch', 'reticulate', 'cowplot')) %:%
foreach(seed=1:200) %dopar% {
print(c(ind, seed))
# N <- N_vec[ind]
# Nt <- Nt_vec[ind]
# df <- DGP(seed, N, Nt, O1, O2, L1)
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# params <- filtering(seed, N, Nt, O1, O2, L1, df$y1, df$y2, nInit, maxIter)
params <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
output <- result(N, Nt, O1, O2, L1, df$y1, df$y2, params, df$S, df$eta1)
# saveRDS(df, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# saveRDS(params, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
saveRDS(output, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
}
# (df <- readRDS('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_16_N_25_T_25_O1_6_O2_3_L1_2.RDS'))
# (params <- readRDS('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_13_N_25_T_25_O1_6_O2_3_L1_2.RDS'))
# (output <- readRDS('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_13_N_25_T_25_O1_6_O2_3_L1_2.RDS'))
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300')
if (!requireNamespace('doParallel', quietly = TRUE)) {
install.packages('doParallel') }
library(doParallel)
cl <- makeCluster(7)
registerDoParallel(cl)
# stopCluster(cl)
source('library_202309141300.R')
source('DGP_202309141300.R')
source('filtering_202309191300.R')
source('result_202309161300.R')
library_load()
# N_vec <- c(25)#, 25, 50, 50, 100, 100)
# Nt_vec <- c(25)#, 50, 25, 50, 25, 50)
O1 <- 6
O2 <- 3
L1 <- 2
nInit <- 30
maxIter <- 300
nNT <- 6/6
nSim <- 200
foreach(ind=1:nNT, .packages=c('reshape', 'ggplot2', 'plotly', 'sigmoid', 'Rlab', 'cowplot', 'lavaan', 'torch', 'reticulate', 'cowplot')) %:%
foreach(seed=1:200) %dopar% {
print(c(ind, seed))
# N <- N_vec[ind]
# Nt <- Nt_vec[ind]
# df <- DGP(seed, N, Nt, O1, O2, L1)
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# params <- filtering(seed, N, Nt, O1, O2, L1, df$y1, df$y2, nInit, maxIter)
params <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
output <- result(N, Nt, O1, O2, L1, df$y1, df$y2, params, df$S, df$eta1)
# saveRDS(df, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
# saveRDS(params, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
saveRDS(output, paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1, '.RDS', sep=''))
}
# (df <- readRDS('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_16_N_25_T_25_O1_6_O2_3_L1_2.RDS'))
# (params <- readRDS('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_13_N_25_T_25_O1_6_O2_3_L1_2.RDS'))
# (output <- readRDS('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_13_N_25_T_25_O1_6_O2_3_L1_2.RDS'))
N <- 50
Nt <- 50
O1 <- 6
O2 <- 3
L1 <- 2
nSim <- 200
N <- 50
cTable_list <- list()
sumLik_vec <- vector(mode='numeric', length=nSim)
sumLik_NT_vec <- vector(mode='numeric', length=nSim)
sensitivity_vec <- vector(mode='numeric', length=nSim)
specificity_vec <- vector(mode='numeric', length=nSim)
delta1_vec <- vector(mode='numeric', length=nSim)
delta1_N_vec <- vector(mode='numeric', length=nSim)
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
output <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
cTable_list[[seed]] <- output$cTable
sumLik_vec[seed] <- output$sumLik
sumLik_NT_vec[seed] <- output$sumLik_NxT
sensitivity_vec[seed] <- ifelse(is.numeric(output$sensitivity), output$sensitivity, -99)
specificity_vec[seed] <- ifelse(is.numeric(output$specificity), output$specificity, -99)
delta1_vec[seed] <- ifelse(is.numeric(output$delta1), output$delta1, -99)
delta1_N_vec[seed] <- ifelse(is.numeric(output$delta1_N), output$delta1_N, -99) } }
summary(sumLik_vec)
summary(sumLik_NT_vec)
summary(sensitivity_vec)
summary(specificity_vec)
summary(delta1_vec)
summary(delta1_N_vec)
cTable_list
params_list <- list
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
if (seed == nSim) {colnames(params_list)[1:nSim] <- 1:nSim} } }
params_list <- list
params_list
stopCluster(cl)
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
if (seed == nSim) {colnames(params_list)[1:nSim] <- 1:nSim} } }
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
if (seed == nSim) {colnames(params_list)[1:nSim] <- 1:nSim} } }
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
params
params_list
colnames(params_list)[1:nSim]
1:nSim
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
if (seed == nSim) {colnames(params_list)[1:nSim] <- 1:nSim} } }
seed
nSim
colnames(params_list)[1:nSim]
1:nSim
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
if (seed == nSim) {colnames(params_list) <- 1:nSim} } }
colnames
colnames(params_list)
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
# if (seed == nSim) {colnames(params_list) <- 1:nSim}
} }
params_list
colnames(params_list) <- 1:nSim
colnames(params_list)
length(colnames(params_list) )
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
print(seed)
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params) } }
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
} else print(seed) }
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
colnames(params_list) <- NULL } }
params_list
params_list
cTable_list
params_list
params_list
cTable_list
cTable_list[1:10]
params_list[1]
params_list[1,]
params_list[,1]
mPr_list <- list()
mPr_sm_list <- list()
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
output <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/output__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
mPr_list[[seed]] <- output$mPr
mPr_sm_list[[seed]] <- output$mPr_sm
cTable_list[[seed]] <- output$cTable
sumLik_vec[seed] <- output$sumLik
sumLik_NT_vec[seed] <- output$sumLik_NxT
sensitivity_vec[seed] <- ifelse(is.numeric(output$sensitivity), output$sensitivity, -99)
specificity_vec[seed] <- ifelse(is.numeric(output$specificity), output$specificity, -99)
delta1_vec[seed] <- ifelse(is.numeric(output$delta1), output$delta1, -99)
delta1_N_vec[seed] <- ifelse(is.numeric(output$delta1_N), output$delta1_N, -99) } }
mPr_list[[1]]
S
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
S_list[[seed]] <- df$S } }
S_list <- list
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
S_list[[seed]] <- df$S } }
df$S
S_list <- list
for (seed in 1:nSim) {
print(seed)
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
S_list[[seed]] <- df$S } }
S_list[[1]]
S_list
trueS_list <- list
trueS_list <- list
for (seed in 1:nSim) {
print(seed)
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
trueS_list[[seed]] <- df$S } }
trueS_list
params_list <- list
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
colnames(params_list) <- NULL } }
params_list <- list
params_list
params_list <- list
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
colnames(params_list) <- NULL } }
S_list <- list
params_list <- list()
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
params <- unlist(readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/params__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep='')))
ifelse(seed>1, params_list <- cbind(params_list, params), params_list <- params)
colnames(params_list) <- NULL } }
params_list
S_list <- list()
for (seed in 1:nSim) {
print(seed)
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
trueS_list[[seed]] <- df$S } }
S_list <- list()
for (seed in 1:nSim) {
print(seed)
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
S_list[[seed]] <- df$S } }
S_list <- list()
for (seed in 1:nSim) {
if (file.exists(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))) {
df <- readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202309141300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_', O1, '_O2_', O2, '_L1_', L1,'.RDS', sep=''))
S_list[[seed]] <- df$S } }
S_list
S_list[[1]]
melt(S_list[[1]])
# evaluation of the regime prediction
DO <- 2 - mPr_list[[1]]
DO2 <- 2 - mPr_sm_list[[1]]
df_S <- melt(S_list[[1]]); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr_diff <- melt(as.array(DO2  > 1.5) + 1); colnames(df_Pr_diff) <- c('ID', 'time', 'S')
df_Pr_diff$S <- abs(df_Pr_diff$S - df_S$S)
# evaluation of the regime prediction
DO <- 2 - mPr_list[[1]]
DO2 <- 2 - mPr_sm_list[[1]]
df_S <- melt(S_list[[1]]); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, labels = "AUTO")
DO[40:50,]
# evaluation of the regime prediction
sim <- 1
DO <- 2 - mPr_list[[sim]]
DO2 <- 2 - mPr_sm_list[[sim]]
df_S <- melt(S_list[[sim]]); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, labels = "AUTO")
# evaluation of the regime prediction
sim <- 2
DO <- 2 - mPr_list[[sim]]
DO2 <- 2 - mPr_sm_list[[sim]]
df_S <- melt(S_list[[sim]]); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, labels = "AUTO")
S_list
mPr_list[[sim]]
2 - mPr_list[[sim]]
(2 - mPr_list[[sim]])[20:25,]
(2 - mPr_list[[sim]])[18:25,]
(2 - mPr_list[[sim]])[18:25,50]
(2 - mPr_list[[sim]])[,50]
# evaluation of the regime prediction
sim <- 2
DO <- 2 - mPr_list[[sim]]
DO2 <- 2 - mPr_sm_list[[sim]]
df_S <- melt(S_list[[sim]]); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, labels = "AUTO")
Nt
params_list[[2]]
params_list[2,]
params_list[,2]
# evaluation of the regime prediction
sim <- 1
DO <- 2 - mPr_list[[sim]]
DO2 <- 2 - mPr_sm_list[[sim]]
df_S <- melt(S_list[[sim]]); colnames(df_S) <- c('ID', 'time', 'S')
plot_S <- ggplot(data=df_S, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr <- melt(as.array(DO)); colnames(df_Pr) <- c('ID', 'time', 'S')
plot_Pr <- ggplot(data=df_Pr, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
df_Pr2 <- melt(as.array(DO2)); colnames(df_Pr2) <- c('ID', 'time', 'S')
plot_Pr2 <- ggplot(data=df_Pr2, aes(time, ID, fill=S)) + geom_tile(color='grey') + scale_fill_gradient(low='white',high='red') + theme(legend.position='none')
plot_grid(plot_S, plot_Pr, plot_Pr2, labels = "AUTO")
params_list[[1]]
params_list[.1]
params_list[,1]
params_list
params_list[35,]
params_list[,34:35]
params_list[34:35,]
params_list[33:35,]
params_list[33:35,]
hist(params_list[33,])
hist(params_list[33,], breaks=10)
hist(params_list[33,], breaks=20)
hist(params_list[34,], breaks=20)
hist(params_list[35,], breaks=20)
hist(params_list[34,], breaks=20)
min(params_list[33,])
max(params_list[33,])
sigmoid(3)
sigmoid(3)**30
sigmoid(3)**50
sigmoid(3)**25
sigmoid(5)**50
sigmoid(5.5)**50
sigmoid(3)**50
sigmoid(4)**50
sigmoid(4)**25
sigmoid(4)**50
sigmoid(1)**50
sigmoid(1)**50
sigmoid(2)**50
sigmoid(3)**50
hist(params_list[33,], breaks=20)
sigmoig(3)**50
sigmoid(3)**50
sigmoid(5.5)**50
torch_eye(6) + sEpsilon
torch_eye(6) + sEpsilon
mpfr(torch_eye(6) + sEpsilon, 128)
install.packages("Rmpfr")
library(Rmpfr)
mpfr(torch_eye(6) + sEpsilon, 128)
mpfr(1 + sEpsilon, 128)
mpfr(1 + sEpsilon, 128)
mpfr(torch_eye(6) + sEpsilon, 128)
mpfrArray(torch_eye(6) + sEpsilon, 128)
mpfr2Array(torch_eye(6) + sEpsilon, 128)
mpfr2array(torch_eye(6) + sEpsilon, 128)
?mpfr2array()
seed
set.seed(101*seed)
sigmoid(5.5)
sigmoid(56)
sigmoid(6)
sigmoid(5.6)
sigmoid(59)
sigmoid(9)
sigmoid(15)
sigmoid(20)
params_list
params_list[,33:35]
params_list[33:35,]
params_list[33,]
cTable_list[2]
cTable_list[[2]]
params_list[33,2]
cTable_list[[1]]
params_list[33,1]
cTable_list[3]
params_list[33,3]
cTable_list[4]
params_list[33,4]
cTable_list[4]
cTable_list[5]
params_list[33,5]
cTable_list[6]
params_list[33,6]
params_list[33:35,6]
cTable_list[6]
params_list[33:35,1]
cTable_list[1]
params_list[33:35,1]
cTable_list[2]
params_list[33:35,2]
params_list[33:35,2]
params_list[33:35,3]
params_list[33:35,4]
cTable_list[4]
source('library_202309141300.R')
source('DGP_202309141300.R')
source('filtering_202309191300.R')
source('result_202309191300.R')
library_load()
