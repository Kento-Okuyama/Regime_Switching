plot(spent)
plot(spent, type='l')
plot(spent, type='m')
plot(spent)
lm(spent)
lm(spent~1:11
)
1:11
mon <- 1:11
lm(spent~mon)
plot(spent, type='l')
summary(spent)
hist(spent)
spent22<-spent
spent21 <- c(2289.2, 797.2, 566.25, 576.54, 786.88, 1140.89, 762.28, 1158.08, 1337.70, 1732.7, 1073.09, 1422.94)
plot(spent22, spent21)
plot(c(spent22,0), spent21)
cor(spent22, spent21)
cor(c(spent22,0), spent21)
plot(spent21)
plot(spent22)
plot(spent21)
summary(spent21)
summary(spent22)
spent21
spent23<-spent22
spend23
spent23
spent22<-c(3387.12,540.53,914.17,1892.96,1527.49,3119.59,829.44,1751.46,1021.85,1838.6,1148.7,1497.53)
spent22
spent23
spent23[11] <- 1814.41
spent23
spent22
spnet21
spent21
summary(spent21)
summary(spent22)
summary(spent23)
spent21
spent22
spent23
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300')
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300')
readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300/output/df__sim_', 1, '_N_', 100, '_T_', 25, '_O1_6_O2_3_L1_2.RDS', sep=''))
N <- 100; Nt <- 25
seeds <- c(100:116)
df_list <- lapply(seeds, function(seed) readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300')
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300')
# knitr::opts_knit$set(root.dir = 'C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
N <- 100; Nt <- 25
seeds <- c(100:116)
df_list <- lapply(seeds, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300')
# knitr::opts_knit$set(root.dir = 'C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
getwd()
N <- 100; Nt <- 25
seeds <- c(100:116)
df_list <- lapply(seeds, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311011300')
# knitr::opts_knit$set(root.dir = 'C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
N <- 100; Nt <- 25
# install.packages ("remotes")
remotes::install_github ("zr159811/chatGPTapi")
Sys.setenv (OPENAI_API_KEY = "YOUR_API_KEY")
Sys.setenv(OPENAI_API_KEY = "YOUR_API_KEY")
?Sys.setenv
Sys.setenv(OPENAI_API_KEY = "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")
cat (askgpt ("How are you?"))
cat (askgpt ("How are you?"))
library(chatGPTapi)
cat (askgpt ("How are you?"))
usethis::edit_r_environ()
cat(askgpt("How are you?"))
# install.packages('rstudioapi')
library(rstudioapi)
restartSession(command="source('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/control_202311301300.R'); control()")
source('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/control_202311301300.R'); control()
source('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/control_202311301300.R'); control()
print('finished!')
install.packages("xfun")
install.packages("xfun")
install.packages("knitr")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
hist(sensitivity_75x25_group)
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
N <- 100; Nt <- 25
seeds <- c(1:200)
df_list <- lapply(seeds, function(seed) readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(df_list) <- paste0('df_100x25_', seeds)
list2env(df_list, envir = .GlobalEnv)
filter_list <- lapply(seeds, function(seed) readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(filter_list) <- paste0('filter_100x25_', seeds)
list2env(filter_list, envir = .GlobalEnv)
# Function to remove a certain element from a vector
remove_element <- function(vector, element_to_remove) {
vector <- vector[!vector %in% element_to_remove]
return(vector)
}
element_to_remove <- (unlist(lapply(df_list, function(df) mean(df$S[,Nt]==2))) <= 10/75 * (75/8) * (8/75) + unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0
element_to_remove2 <- as.numeric(which(element_to_remove==TRUE))
seeds2 <- remove_element(seeds, element_to_remove2)
seeds3 <- seeds2[-c(28,35)]
df_list2 <- lapply(seeds2, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(df_list2) <- paste0('df_100x25_', seeds2)
list2env(df_list2, envir = .GlobalEnv)
filter_list2 <- lapply(seeds2, function(seed) readRDS(paste('output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(filter_list2) <- paste0('filter_100x25_', seeds2)
list2env(filter_list2, envir = .GlobalEnv)
# df_list2 <- lapply(seeds3, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
# names(df_list2) <- paste0('df_100x25_', seeds3)
# list2env(df_list2, envir = .GlobalEnv)
#
# filter_list2 <- lapply(seeds3, function(seed) readRDS(paste('output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
# names(filter_list2) <- paste0('filter_100x25_', seeds3)
# list2env(filter_list2, envir = .GlobalEnv)
S_100x25_group <- unlist(lapply(df_list2, function(df) mean(df$S[,Nt]==2)))
hist(S_100x25_group)
summary(S_100x25_group)
length(seeds2)
sumLik_100x25_group <- unlist(lapply(filter_list2, function(filter) filter$sumLik_best_NT))
hist(log(sumLik_100x25_group))
summary(log(sumLik_100x25_group))
sort(sumLik_100x25_group)
delta_100x25_group <- unlist(lapply(filter_list2, function(filter) filter$delta_N))
hist(log(delta_100x25_group))
summary(log(delta_100x25_group))
plot(log(sumLik_100x25_group), log(delta_100x25_group))
cor(log(sumLik_100x25_group), log(delta_100x25_group))
sensitivity_100x25_group <- unlist(lapply(filter_list2, function(filter) filter$output_best$sensitivity))
hist(sensitivity_100x25_group)
summary(sensitivity_100x25_group)
sum(sensitivity_100x25_group<0.8)/length(seeds2)
specificity_100x25_group <- unlist(lapply(filter_list2, function(filter) filter$output_best$specificity))
hist(specificity_100x25_group)
summary(specificity_100x25_group)
plot(sensitivity_100x25_group, specificity_100x25_group)
cor(sensitivity_100x25_group, specificity_100x25_group)
theta_100x25_group <- do.call(rbind, lapply(filter_list2, function(filter) filter$theta_best))
colnames(theta_100x25_group) <- c('B11_1 (.2)', 'B11_2 (.3)', 'B12_1 (-.1)', 'B12_2 (-.2)', 'B21d_1 (.8)', 'B21d_2 (.8)', 'B22d_1 (.4)', 'B22d_2 (.4)', 'B31_1 (.1)', 'B31_2 (.1)', 'B32_1 (-.1)', 'B32_2 (-.1)', 'Lmdd_1 (1)', 'Lmdd_2 (0)', 'Lmdd_3 (.4)', 'Lmdd_4 (0)', 'Lmdd_5 (.8)', 'Lmdd_6 (0)', 'Lmdd_7 (0)', 'Lmdd_8 (1)', 'Lmdd_9 (0)', 'Lmdd_10 (.5)', 'Lmdd_11 (0)', 'Lmdd_12 (1.2)', 'Qd_1 (.2)', 'Qd_2 (.2)', 'Rd_1 (.3)', 'Rd_2 (.3)', 'Rd_3 (.3)', 'Rd_4 (.3)', 'Rd_5 (.3)', 'Rd_6 (.3)', 'gamma1 (3.5)', 'gamma2_1 (1)', 'gamma2_2 (1)')
summary(theta_100x25_group)
par(mfrow = c(1, 2))
pred_rate_100x25_group <- unlist(lapply(filter_list2, function(filter) (filter$output_best$TP + filter$output_best$FP) / N))
hist(pred_rate_100x25_group)
hist(S_100x25_group)
summary(pred_rate_100x25_group)
plot(S_100x25_group, pred_rate_100x25_group)
cor(S_100x25_group, pred_rate_100x25_group)
(worst_100 <- which.min(sensitivity_100x25_group))
(worst2_100 <- which(sensitivity_100x25_group<0.5)[1])
S_100x25_group[worst_100]
S_100x25_group[worst2_100]
summary(S_100x25_group)
theta_100x25_group[worst_100,]
theta_100x25_group[worst2_100,]
colMeans(theta_100x25_group)
apply(theta_100x25_group, 2, median)
apply(theta_100x25_group, 2, sd)
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
N <- 75; Nt <- 25
seeds <- c(1:200)
df_list <- lapply(seeds, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(df_list) <- paste0('df_75x25_', seeds)
list2env(df_list, envir = .GlobalEnv)
filter_list <- lapply(seeds, function(seed) readRDS(paste('output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(filter_list) <- paste0('filter_75x25_', seeds)
list2env(filter_list, envir = .GlobalEnv)
# Function to remove a certain element from a vector
remove_element <- function(vector, element_to_remove) {
vector <- vector[!vector %in% element_to_remove]
return(vector)
}
element_to_remove <- (unlist(lapply(df_list, function(df) mean(df$S[,Nt]==2))) <= 10/75 * (75/8) * (8/75) + unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0
element_to_remove2 <- as.numeric(which(element_to_remove==TRUE))
seeds2 <- remove_element(seeds, element_to_remove2)
df_list2 <- lapply(seeds2, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(df_list2) <- paste0('df_75x25_', seeds2)
list2env(df_list2, envir = .GlobalEnv)
filter_list2 <- lapply(seeds2, function(seed) readRDS(paste('output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(filter_list2) <- paste0('filter_75x25_', seeds2)
list2env(filter_list2, envir = .GlobalEnv)
S_75x25_group <- unlist(lapply(df_list2, function(df) mean(df$S[,Nt]==2)))
hist(S_75x25_group)
summary(S_75x25_group)
length(seeds2)
sumLik_75x25_group <- unlist(lapply(filter_list2, function(filter) filter$sumLik_best_NT))
hist(log(sumLik_75x25_group))
summary(log(sumLik_75x25_group))
delta_75x25_group <- unlist(lapply(filter_list2, function(filter) filter$delta_N))
hist(log(delta_75x25_group))
summary(log(delta_75x25_group))
plot(log(sumLik_75x25_group), log(delta_75x25_group))
cor(log(sumLik_75x25_group), log(delta_75x25_group))
sensitivity_75x25_group <- unlist(lapply(filter_list2, function(filter) filter$output_best$sensitivity))
hist(sensitivity_75x25_group)
summary(sensitivity_75x25_group)
sum(sensitivity_75x25_group<0.8)/length(seeds2)
specificity_75x25_group <- unlist(lapply(filter_list2, function(filter) filter$output_best$specificity))
hist(specificity_75x25_group)
summary(specificity_75x25_group)
plot(sensitivity_75x25_group, specificity_75x25_group)
cor(sensitivity_75x25_group, specificity_75x25_group)
theta_75x25_group <- do.call(rbind, lapply(filter_list2, function(filter) filter$theta_best))
colnames(theta_75x25_group) <- c('B11_1 (.2)', 'B11_2 (.3)', 'B12_1 (-.1)', 'B12_2 (-.2)', 'B21d_1 (.8)', 'B21d_2 (.8)', 'B22d_1 (.4)', 'B22d_2 (.4)', 'B31_1 (.1)', 'B31_2 (.1)', 'B32_1 (-.1)', 'B32_2 (-.1)', 'Lmdd_1 (1)', 'Lmdd_2 (0)', 'Lmdd_3 (.4)', 'Lmdd_4 (0)', 'Lmdd_5 (.8)', 'Lmdd_6 (0)', 'Lmdd_7 (0)', 'Lmdd_8 (1)', 'Lmdd_9 (0)', 'Lmdd_10 (.5)', 'Lmdd_11 (0)', 'Lmdd_12 (1.2)', 'Qd_1 (.2)', 'Qd_2 (.2)', 'Rd_1 (.3)', 'Rd_2 (.3)', 'Rd_3 (.3)', 'Rd_4 (.3)', 'Rd_5 (.3)', 'Rd_6 (.3)', 'gamma1 (3.5)', 'gamma2_1 (1)', 'gamma2_2 (1)')
summary(theta_75x25_group)
par(mfrow = c(1, 2))
pred_rate_75x25_group <- unlist(lapply(filter_list2, function(filter) (filter$output_best$TP + filter$output_best$FP) / N))
hist(pred_rate_75x25_group)
hist(S_75x25_group)
summary(pred_rate_75x25_group)
plot(S_75x25_group, pred_rate_75x25_group)
cor(S_75x25_group, pred_rate_75x25_group)
worst_75 <- which.min(sensitivity_75x25_group)
S_75x25_group[worst_75]
summary(S_75x25_group)
theta_75x25_group[worst_75,]
colMeans(theta_75x25_group)
apply(theta_75x25_group, 2, median)
apply(theta_75x25_group, 2, sd)
sensitivity_75x25_group
sort(sensitivity_75x25_group)
sort(sensitivity_100x25_group)
filter_100x25_1$output_best$TP+filter_100x25_1$output_best$TN+filter_100x25_1$output_best$FN+filter_100x25_1$output_best$FP
Nt
N
# New data for boxplot
data1 <- c(0.8933,  0.9600,  0.9733,    0.9867,  1.0000)  # 75x25_accuracy
data2 <- c(0.8000,  0.9600,  0.9800,    0.9900,  1.0000)  # 100x25_accuracy
data3 <- c(0.6250,  0.8231,  0.9167,  1.0000,  1.0000)  # 75x25_sensitivity
data4 <- c(0.3684,  0.8333,  0.8824,  1.0000,  1.0000)  # 100x25_sensitivity
data5 <- c(0.9375,  0.9841,  0.9844,  1.0000,  1.0000)  # 75x25_specificity
data6 <- c(0.9012,  0.9884,  1.0000,  1.0000,  1.0000)  # 100x25_specificity
# Create boxplot
boxplot(list(data1, data2, data3, data4, data5, data6),
horizontal=FALSE,
col = "lightblue",
names=c("accuracy_75", "_100", "sensitivity_75", "_100", "specificity_75", "_100")
)
# New mean values
mean1 <- 0.9694  # Mean of 75x25_accuracy
mean2 <- 0.9713  # Mean of 100x25_accuracy
mean3 <- 0.8837  # Mean of 75x25_sensitivity
mean4 <- 0.8759  # Mean of 100x25_sensitivity
mean5 <- 0.9902  # Mean of 75x25_specificity
mean6 <- 0.9940  # Mean of 100x25_specificity
# Add points for mean values
points(c(1, 2, 3, 4, 5, 6), c(mean1, mean2, mean3, mean4, mean5, mean6), pch=18, col="red")
# New data for boxplot
data1 <- c(0.8933,  0.9600,  0.9733,    0.9867,  1.0000)  # 75x25_accuracy
data2 <- c(0.8000,  0.9600,  0.9800,    0.9900,  1.0000)  # 100x25_accuracy
data3 <- c(0.6250,  0.8231,  0.9167,  1.0000,  1.0000)  # 75x25_sensitivity
data4 <- c(0.3684,  0.8333,  0.8824,  1.0000,  1.0000)  # 100x25_sensitivity
data5 <- c(0.9375,  0.9841,  0.9844,  1.0000,  1.0000)  # 75x25_specificity
data6 <- c(0.9012,  0.9884,  1.0000,  1.0000,  1.0000)  # 100x25_specificity
# Create boxplot
boxplot(list(data1, data2, data3, data4, data5, data6),
horizontal=FALSE,
col = "lightblue",
names=c("accuracy_75", "_100", "sensitivity_75", "_100", "specificity_75", "_100")
)
# New mean values
mean1 <- 0.9694  # Mean of 75x25_accuracy
mean2 <- 0.9713  # Mean of 100x25_accuracy
mean3 <- 0.8837  # Mean of 75x25_sensitivity
mean4 <- 0.8759  # Mean of 100x25_sensitivity
mean5 <- 0.9902  # Mean of 75x25_specificity
mean6 <- 0.9940  # Mean of 100x25_specificity
# Add points for mean values
points(c(1, 2, 3, 4, 5, 6), c(mean1, mean2, mean3, mean4, mean5, mean6), pch=18, col="red")
######
# 75 #
######
# # Prepare data for boxplot from summary statistics
# data_list <- list(
#   d1 = c(-0.005404, 0.088620, 0.130745, 0.178547, 0.782399),
#   d2 = c(-0.001439, 0.123471, 0.194896, 0.273371, 0.628895),
#   d3 = c(-0.77264, -0.22303, -0.14432, -0.08936, 0.10002),
#   d4 = c(-0.63017, -0.25532, -0.16502, -0.08518, -0.06142),
#   d5 = c(0.4511, 0.7611, 0.8350, 0.8915, 1.0193),
#   d6 = c(0.5352, 0.7764, 0.8587, 0.9006, 1.0612),
#   d7 = c(-0.01166, 0.15190, 0.24603, 0.33260, 0.48309),
#   d8 = c(-0.01113, 0.10519, 0.20684, 0.30655, 0.47765),
#   d9 = c(-0.43691, -0.01182, 0.04465, 0.13606, 0.75606),
#   d10 = c(-0.47400, -0.02473, 0.04960, 0.11153, 0.38749),
#   d11 = c(-0.62467, -0.14621, -0.06821, -0.01513, 0.37832),
#   d12 = c(-0.57264, -0.12753, -0.05786, -0.02062, 0.22710),
#   d13 = c(0.3374, 0.6014, 0.8548, 1.0819, 1.3765),
#   d14 = c(0.5086, 0.7652, 0.9095, 1.1424, 1.3784),
#   d15 = c(0.3322, 0.5933, 0.7883, 1.1356, 1.3402),
#   d16 = c(0.6283, 0.9323, 1.1235, 1.3007, 1.6244),
#   d17 = c(0.001000, 0.003945, 0.172705, 0.174482, 0.177272),
#   d18 = c(0.001000, 0.003696, 0.172365, 0.174088, 0.177934),
#   d19 = c(0.04092, 0.13954, 0.37419, 0.37567, 0.37870),
#   d20 = c(0.02091, 0.10841, 0.37334, 0.37459, 0.37686),
#   d21 = c(0.01627, 0.12495, 0.37282, 0.37431, 0.37806),
#   d22 = c(0.03871, 0.12670, 0.37372, 0.37525, 0.37895),
#   d23 = c(0.01726, 0.10861, 0.37310, 0.37484, 0.37777),
#   d24 = c(0.04888, 0.13006, 0.37234, 0.37432, 0.37775),
#   d25 = c(4.097, 4.122, 4.124, 4.350, 4.637),
#   d26 = c(-0.08532, 0.52421, 0.88572, 1.29703, 2.19050),
#   d27 = c(0.1315, 0.5084, 0.8170, 1.2589, 2.8608)
# )
#
# # ture values
# true_values <- c(.2, .3, -.1, -.2, .8, .8, .4, .4, .1, .1, -.1, -.1, .4, .8, .5, 1.2, .2, .2, .3, .3, .3, .3, .3, .3, 3.5, 1, 1)
#
# # Plot the boxplot
# boxplot(data_list,
#         names = c("B11_1", "B11_2", "B12_1", "B12_2", "B21d_1", "B21d_2", "B22d_1", "B22d_2", "B31_1", "B31_2", "B32_1", "B32_2", "Lmdd_3", "Lmdd_5", "Lmdd_10", "Lmdd_12", "Qd_1", "Qd_2", "Rd_1", "Rd_2", "Rd_3", "Rd_4", "Rd_5", "Rd_6", "gamma1", "gamma2_1", "gamma2_2"),
#         # main="Custom Boxplot with Rotated Labels and Mean Points",
#         xaxt='n'
# )
# points(1:27, true_values, col="red", pch=18)  # Add mean values
#
# # Rotate and add x-axis labels
# axis(1, at=1:27, labels=FALSE)
# text(1:27, par("usr")[3] - 0.1, srt=90, adj=1, labels=c("B11_1", "B11_2", "B12_1", "B12_2", "B21d_1", "B21d_2", "B22d_1", "B22d_2", "B31_1", "B31_2", "B32_1", "B32_2", "Lmdd_3", "Lmdd_5", "Lmdd_10", "Lmdd_12", "Qd_1", "Qd_2", "Rd_1", "Rd_2", "Rd_3", "Rd_4", "Rd_5", "Rd_6", "gamma1", "gamma2_1", "gamma2_2"), xpd=TRUE)
#
# Prepare data for boxplot from summary statistics
data_list <- list(
B11_1 = c(Min = -0.005404, `1st Qu.` = 0.081249, Median = 0.129955, Mean = 0.152380, `3rd Qu.` = 0.178977, Max = 0.496356),
B11_2 = c(Min = -0.001439, `1st Qu.` = 0.111375, Median = 0.176406, Mean = 0.204756, `3rd Qu.` = 0.277566, Max = 0.628895),
B12_1 = c(Min = -0.53371, `1st Qu.` = -0.22518, Median = -0.13869, Mean = -0.16693, `3rd Qu.` = -0.09048, Max = 0.06342),
B12_2 = c(Min = -0.53115, `1st Qu.` = -0.25584, Median = -0.17840, Mean = -0.18115, `3rd Qu.` = -0.08317, Max = 0.05582),
B21d_1 = c(Min = 0.4511, `1st Qu.` = 0.7612, Median = 0.8243, Mean = 0.8181, `3rd Qu.` = 0.8883, Max = 1.0103),
B21d_2 = c(Min = 0.5352, `1st Qu.` = 0.7679, Median = 0.8668, Mean = 0.8388, `3rd Qu.` = 0.9109, Max = 1.0612),
B22d_1 = c(Min = -0.01166, `1st Qu.` = 0.15302, Median = 0.22621, Mean = 0.23627, `3rd Qu.` = 0.33108, Max = 0.48309),
B22d_2 = c(Min = -0.01113, `1st Qu.` = 0.13462, Median = 0.23602, Mean = 0.22365, `3rd Qu.` = 0.29995, Max = 0.47765),
B31_1 = c(Min = -0.347024, `1st Qu.` = -0.007436, Median = 0.050005, Mean = 0.086535, `3rd Qu.` = 0.153132, Max = 0.756058),
B31_2 = c(Min = -0.33124, `1st Qu.` = 0.00218, Median = 0.06176, Mean = 0.06069, `3rd Qu.` = 0.12392, Max = 0.38749),
B32_1 = c(Min = -0.62467, `1st Qu.` = -0.12406, Median = -0.06386, Mean = -0.06899, `3rd Qu.` = -0.01433, Max = 0.37832),
B32_2 = c(Min = -0.57264, `1st Qu.` = -0.13436, Median = -0.07592, Mean = -0.09483, `3rd Qu.` = -0.03222, Max = 0.22710),
Lmdd_3 = c(Min = 0.3374, `1st Qu.` = 0.6161, Median = 0.8874, Mean = 0.8695, `3rd Qu.` = 1.0833, Max = 1.3765),
Lmdd_5 = c(Min = 0.5086, `1st Qu.` = 0.7685, Median = 0.9561, Mean = 0.9502, `3rd Qu.` = 1.1513, Max = 1.3701),
Lmdd_10 = c(Min = 0.3559, `1st Qu.` = 0.5964, Median = 0.8009, Mean = 0.8579, `3rd Qu.` = 1.1773, Max = 1.3402),
Lmdd_12 = c(Min = 0.6283, `1st Qu.` = 0.9183, Median = 1.1226, Mean = 1.1000, `3rd Qu.` = 1.2923, Max = 1.6244),
Qd_1 = c(Min = 0.001000, `1st Qu.` = 0.004685, Median = 0.172533, Mean = 0.114878, `3rd Qu.` = 0.174634, Max = 0.176980),
Qd_2 = c(Min = 0.001000, `1st Qu.` = 0.004092, Median = 0.172400, Mean = 0.114631, `3rd Qu.` = 0.174352, Max = 0.177934),
Rd_1 = c(Min = 0.04706, `1st Qu.` = 0.13104, Median = 0.37410, Mean = 0.28308, `3rd Qu.` = 0.37563, Max = 0.37870),
Rd_2 = c(Min = 0.02224, `1st Qu.` = 0.10105, Median = 0.37318, Mean = 0.26956, `3rd Qu.` = 0.37458, Max = 0.37686),
Rd_3 = c(Min = 0.01627, `1st Qu.` = 0.11922, Median = 0.37250, Mean = 0.27913, `3rd Qu.` = 0.37430, Max = 0.37806),
Rd_4 = c(Min = 0.04403, `1st Qu.` = 0.15281, Median = 0.37363, Mean = 0.28354, `3rd Qu.` = 0.37545, Max = 0.37895),
Rd_5 = c(Min = 0.01943, `1st Qu.` = 0.10601, Median = 0.37305, Mean = 0.27256, `3rd Qu.` = 0.37489, Max = 0.37777),
Rd_6 = c(Min = 0.05158, `1st Qu.` = 0.13486, Median = 0.37229, Mean = 0.28216, `3rd Qu.` = 0.37463, Max = 0.37775),
gamma1 = c(Min = 4.097, `1st Qu.` = 4.122, Median = 4.124, Mean = 4.222, `3rd Qu.` = 4.341, Max = 4.618),
gamma2_1 = c(Min = -0.08532, `1st Qu.` = 0.52889, Median = 0.88986, Mean = 0.90578, `3rd Qu.` = 1.24353, Max = 2.12982),
gamma2_2 = c(Min = 0.1315, `1st Qu.` = 0.4904, Median = 0.8262, Mean = 0.9665, `3rd Qu.` = 1.2945, Max = 2.8608)
)
# True values for each parameter
true_values <- c(.2, .3, -.1, -.2, .8, .8, .4, .4, .1, .1, -.1, -.1, .4, .8, .5, 1.2, .2, .2, .3, .3, .3, .3, .3, .3, 3.5, 1, 1)
# Plot the boxplot
boxplot(data_list,
names = names(data_list),
# main="Parameter Estimates with True Values",
# xlab="Parameters",
# ylab="Estimates",
las=2, # Rotate axis labels
cex.axis=0.7, # Adjust size of axis labels
col="lightblue"
)
# Add points for true values
points(1:27, true_values, col="red", pch=18)  # Add mean values
# 100 #
#######
# # Prepare data for boxplot from summary statistics
# data_list <- list(
#   d1 <- c(-0.01528, 0.08216, 0.13185, 0.18528, 0.77047),
#   d2 <- c(-0.01651, 0.12862, 0.19659, 0.28144, 0.62777),
#   d3 <- c(-0.6261, -0.2302, -0.1460, -0.0907, 0.0535),
#   d4 <- c(-0.53039, -0.26381, -0.17652, -0.09429, 0.12856),
#   d5 <- c(0.4929, 0.7523, 0.8323, 0.8868, 1.0005),
#   d6 <- c(0.5361, 0.7925, 0.8576, 0.8993, 1.0932),
#   d7 <- c(-0.01191, 0.14234, 0.25695, 0.35225, 0.48244),
#   d8 <- c(-0.02454, 0.10872, 0.22395, 0.33784, 0.47801),
#   d9 <- c(-0.488528, 0.002254, 0.046325, 0.129591, 0.485016),
#   d10 <- c(-0.38338, -0.01410, 0.05034, 0.13530, 0.41882),
#   d11 <- c(-0.49202, -0.13249, -0.07914, -0.01719, 0.25562),
#   d12 <- c(-0.51070, -0.13905, -0.06332, -0.01847, 0.26331),
#   d13 <- c(0.1945, 0.5704, 0.8371, 1.0814, 1.3765),
#   d14 <- c(0.4931, 0.7564, 0.9162, 1.1404, 1.3704),
#   d15 <- c(0.3869, 0.5831, 0.8007, 1.1183, 1.3755),
#   d16 <- c(0.6467, 0.9379, 1.1234, 1.2814, 1.6282),
#   d17 <- c(0.001000, 0.004055, 0.172877, 0.174630, 0.177859),
#   d18 <- c(0.001000, 0.003547, 0.172353, 0.174377, 0.177937),
#   d19 <- c(0.03815, 0.13121, 0.37461, 0.37606, 0.37842),
#   d20 <- c(0.01084, 0.11671, 0.37353, 0.37489, 0.37703),
#   d21 <- c(0.02748, 0.11579, 0.37305, 0.37455, 0.37739),
#   d22 <- c(0.04015, 0.15458, 0.37395, 0.37542, 0.39179),
#   d23 <- c(0.01649, 0.11801, 0.37362, 0.37489, 0.37764),
#   d24 <- c(0.04643, 0.13999, 0.37296, 0.37424, 0.37711),
#   d25 <- c(3.660, 4.121, 4.124, 4.361, 4.630),
#   d26 <- c(-0.04767, 0.49255, 0.85947, 1.29935, 2.85594),
#   d27 <- c(0.1312, 0.5100, 0.8118, 1.2781, 2.8608)
# )
#
# # true values
# true_values <- c(.2, .3, -.1, -.2, .8, .8, .4, .4, .1, .1, -.1, -.1, .4, .8, .5, 1.2, .2, .2, .3, .3, .3, .3, .3, .3, 3.5, 1, 1)
#
#
# # Plot the boxplot
# boxplot(data_list,
#         names = c("B11_1", "B11_2", "B12_1", "B12_2", "B21d_1", "B21d_2", "B22d_1", "B22d_2", "B31_1", "B31_2", "B32_1", "B32_2", "Lmdd_3", "Lmdd_5", "Lmdd_10", "Lmdd_12", "Qd_1", "Qd_2", "Rd_1", "Rd_2", "Rd_3", "Rd_4", "Rd_5", "Rd_6", "gamma1", "gamma2_1", "gamma2_2"),
#         # main="Custom Boxplot with Rotated Labels and Mean Points",
#         xaxt='n'
# )
# points(1:27, true_values, col="red", pch=18)  # Add mean values
#
# # Rotate and add x-axis labels
# axis(1, at=1:27, labels=FALSE)
# text(1:27, par("usr")[3] - 0.1, srt=90, adj=1, labels=c("B11_1", "B11_2", "B12_1", "B12_2", "B21d_1", "B21d_2", "B22d_1", "B22d_2", "B31_1", "B31_2", "B32_1", "B32_2", "Lmdd_3", "Lmdd_5", "Lmdd_10", "Lmdd_12", "Qd_1", "Qd_2", "Rd_1", "Rd_2", "Rd_3", "Rd_4", "Rd_5", "Rd_6", "gamma1", "gamma2_1", "gamma2_2"), xpd=TRUE)
# Updated data for boxplot from summary statistics
data_list_updated <- list(
B11_1 = c(Min = -0.01527, `1st Qu.` = 0.08021, Median = 0.12350, Mean = 0.15640, `3rd Qu.` = 0.18299, Max = 0.77047),
B11_2 = c(Min = -0.01651, `1st Qu.` = 0.11257, Median = 0.16132, Mean = 0.20556, `3rd Qu.` = 0.25412, Max = 0.62777),
B12_1 = c(Min = -0.62611, `1st Qu.` = -0.23011, Median = -0.15324, Mean = -0.17338, `3rd Qu.` = -0.09935, Max = -0.01233),
B12_2 = c(Min = -0.5304, `1st Qu.` = -0.2738, Median = -0.1804, Mean = -0.1900, `3rd Qu.` = -0.1137, Max = 0.1286),
B21d_1 = c(Min = 0.4929, `1st Qu.` = 0.7513, Median = 0.8354, Mean = 0.8166, `3rd Qu.` = 0.8904, Max = 1.0005),
B21d_2 = c(Min = 0.5361, `1st Qu.` = 0.7950, Median = 0.8702, Mean = 0.8410, `3rd Qu.` = 0.9114, Max = 1.0932),
B22d_1 = c(Min = -0.01191, `1st Qu.` = 0.14382, Median = 0.26324, Mean = 0.24916, `3rd Qu.` = 0.35560, Max = 0.48244),
B22d_2 = c(Min = -0.02454, `1st Qu.` = 0.11142, Median = 0.21907, Mean = 0.22554, `3rd Qu.` = 0.34282, Max = 0.47801),
B31_1 = c(Min = -0.338132, `1st Qu.` = 0.007845, Median = 0.062482, Mean = 0.079100, `3rd Qu.` = 0.136237, Max = 0.485016),
B31_2 = c(Min = -0.32823, `1st Qu.` = -0.01042, Median = 0.05185, Mean = 0.06652, `3rd Qu.` = 0.15688, Max = 0.41882),
B32_1 = c(Min = -0.26274, `1st Qu.` = -0.12349, Median = -0.08359, Mean = -0.07326, `3rd Qu.` = -0.02174, Max = 0.25562),
B32_2 = c(Min = -0.51070, `1st Qu.` = -0.14563, Median = -0.06320, Mean = -0.08262, `3rd Qu.` = -0.01776, Max = 0.21095),
Lmdd_3 = c(Min = 0.1945, `1st Qu.` = 0.6074, Median = 0.8861, Mean = 0.8564, `3rd Qu.` = 1.0626, Max = 1.3731),
Lmdd_5 = c(Min = 0.4931, `1st Qu.` = 0.7772, Median = 0.9361, Mean = 0.9617, `3rd Qu.` = 1.1415, Max = 1.3654),
Lmdd_10 = c(Min = 0.3895, `1st Qu.` = 0.6216, Median = 0.8633, Mean = 0.8649, `3rd Qu.` = 1.1224, Max = 1.3755),
Lmdd_12 = c(Min = 0.6467, `1st Qu.` = 0.9177, Median = 1.0843, Mean = 1.0836, `3rd Qu.` = 1.2407, Max = 1.6208),
Qd_1 = c(Min = 0.001000, `1st Qu.` = 0.004273, Median = 0.173008, Mean = 0.118793, `3rd Qu.` = 0.174648, Max = 0.177056),
Qd_2 = c(Min = 0.001000, `1st Qu.` = 0.006755, Median = 0.172499, Mean = 0.118754, `3rd Qu.` = 0.174423, Max = 0.177937),
Rd_1 = c(Min = 0.03963, `1st Qu.` = 0.14156, Median = 0.37466, Mean = 0.28832, `3rd Qu.` = 0.37610, Max = 0.37842),
Rd_2 = c(Min = 0.01084, `1st Qu.` = 0.12866, Median = 0.37355, Mean = 0.27844, `3rd Qu.` = 0.37491, Max = 0.37652),
Rd_3 = c(Min = 0.03354, `1st Qu.` = 0.12948, Median = 0.37318, Mean = 0.28092, `3rd Qu.` = 0.37461, Max = 0.37739),
Rd_4 = c(Min = 0.04015, `1st Qu.` = 0.16215, Median = 0.37399, Mean = 0.29225, `3rd Qu.` = 0.37565, Max = 0.39179),
Rd_5 = c(Min = 0.02062, `1st Qu.` = 0.12741, Median = 0.37341, Mean = 0.27959, `3rd Qu.` = 0.37509, Max = 0.37764),
Rd_6 = c(Min = 0.04769, `1st Qu.` = 0.14167, Median = 0.37300, Mean = 0.28627, `3rd Qu.` = 0.37419, Max = 0.37711),
gamma1 = c(Min = 4.049, `1st Qu.` = 4.122, Median = 4.124, Mean = 4.224, `3rd Qu.` = 4.364, Max = 4.630),
gamma2_1 = c(Min = -0.04767, `1st Qu.` = 0.48931, Median = 0.85377, Mean = 0.91322, `3rd Qu.` = 1.17154, Max = 2.19817),
gamma2_2 = c(Min = 0.1312, `1st Qu.` = 0.5173, Median = 0.8391, Mean = 0.9650, `3rd Qu.` = 1.2404, Max = 2.8608)
)
# Plot the updated boxplot
boxplot(data_list_updated,
names = names(data_list_updated),
las = 2, # Rotate axis labels
cex.axis = 0.7, # Adjust size of axis labels
col = "lightblue"
# main = "Updated Parameter Estimates with True Values",
# xlab = "Parameters",
# ylab = "Estimates"
)
# Add points for true values
points(1:27, true_values, col = "red", pch = 18) # Add true values
(unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0
sum((unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0)
sum((unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) <= 0)
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300')
N <- 100; Nt <- 25
seeds <- c(1:200)
df_list <- lapply(seeds, function(seed) readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(df_list) <- paste0('df_100x25_', seeds)
list2env(df_list, envir = .GlobalEnv)
filter_list <- lapply(seeds, function(seed) readRDS(paste('C:/Users/kento/OneDrive - UT Cloud/Tuebingen/Research/Methods Center/Regime_Switching/Simulation/202311301300/output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(filter_list) <- paste0('filter_100x25_', seeds)
list2env(filter_list, envir = .GlobalEnv)
# Function to remove a certain element from a vector
remove_element <- function(vector, element_to_remove) {
vector <- vector[!vector %in% element_to_remove]
return(vector)
}
element_to_remove <- (unlist(lapply(df_list, function(df) mean(df$S[,Nt]==2))) <= 10/75 * (75/8) * (8/75) + unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0
element_to_remove2 <- as.numeric(which(element_to_remove==TRUE))
seeds2 <- remove_element(seeds, element_to_remove2)
seeds3 <- seeds2[-c(28,35)]
df_list2 <- lapply(seeds2, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(df_list2) <- paste0('df_100x25_', seeds2)
list2env(df_list2, envir = .GlobalEnv)
filter_list2 <- lapply(seeds2, function(seed) readRDS(paste('output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
names(filter_list2) <- paste0('filter_100x25_', seeds2)
list2env(filter_list2, envir = .GlobalEnv)
# df_list2 <- lapply(seeds3, function(seed) readRDS(paste('output/df__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
# names(df_list2) <- paste0('df_100x25_', seeds3)
# list2env(df_list2, envir = .GlobalEnv)
#
# filter_list2 <- lapply(seeds3, function(seed) readRDS(paste('output/filter__sim_', seed, '_N_', N, '_T_', Nt, '_O1_6_O2_3_L1_2.RDS', sep='')))
# names(filter_list2) <- paste0('filter_100x25_', seeds3)
# list2env(filter_list2, envir = .GlobalEnv)
S_100x25_group <- unlist(lapply(df_list2, function(df) mean(df$S[,Nt]==2)))
hist(S_100x25_group)
summary(S_100x25_group)
length(seeds2)
sumLik_100x25_group <- unlist(lapply(filter_list2, function(filter) filter$sumLik_best_NT))
hist(log(sumLik_100x25_group))
summary(log(sumLik_100x25_group))
sort(sumLik_100x25_group)
delta_100x25_group <- unlist(lapply(filter_list2, function(filter) filter$delta_N))
hist(log(delta_100x25_group))
summary(log(delta_100x25_group))
plot(log(sumLik_100x25_group), log(delta_100x25_group))
cor(log(sumLik_100x25_group), log(delta_100x25_group))
(unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0
sum(unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0
sum((unlist(lapply(filter_list, function(filter) (filter$output_best$TP + filter$output_best$FP) / N) < 0.15)) > 0)
