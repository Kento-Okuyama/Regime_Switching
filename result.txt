> # return the best result
> print(paste0('Best sum likelihood = ', sumLikBest[[1]]))
[1] "Best sum likelihood = 84.3952407836914"
> thetaBest <- as.data.frame(t(as.matrix(thetaBest)))
> colnames(thetaBest) <- c('a1', 'a2', 'b1', 'b2', 'k1', 'k2', 'Lmd1', 'Lmd2', 'alpha1', 'alpha2', 'beta', 'Q1', 'Q2', 'R1', 'R2')
> print('Optimal parameters found:')
[1] "Optimal parameters found:"
> print(paste0(colnames(thetaBest), ": ", as.matrix(thetaBest)))
 [1] "a1: -2.32388067245483"     "a2: 0.111954115331173"    
 [3] "b1: -0.123399630188942"    "b2: -3.05402278900146"    
 [5] "k1: -3.56787061691284"     "k2: -0.295444577932358"   
 [7] "Lmd1: 0.480141013860703"   "Lmd2: -0.032662145793438" 
 [9] "alpha1: -2.69168901443481" "alpha2: -43617.5390625"   
[11] "beta: 0.996081054210663"   "Q1: 0.743620574474335"    
[13] "Q2: 0.743620574474335"     "R1: 0"                    
[15] "R2: 0"                    
> 
> print('yt (true scores):')
[1] "yt (true scores):"
> print(yt)
          [,1]      [,2]      [,3]      [,4]      [,5]
[1,] -2.001333 -3.165679 -3.997484 -4.667500 -5.220652
[2,] -1.986799 -3.152068 -3.995280 -4.640096 -5.153592
[3,] -1.981048 -3.144192 -3.970101 -4.626776 -5.146309
[4,] -2.006400 -3.175514 -4.000004 -4.633510 -5.164496
[5,] -1.994950 -3.179092 -4.019412 -4.674902 -5.228629
[6,] -1.999639 -3.167292 -4.000289 -4.636610 -5.169125
[7,] -2.013683 -3.187284 -4.030018 -4.664265 -5.196960
> print('yth (One-step-ahead predictions):')
[1] "yth (One-step-ahead predictions):"
> print(yth)
torch_tensor
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
-14.4565 -13.8734 -13.8723 -13.8707 -13.8693
[ CPUFloatType{7,5} ][ grad_fn = <struct torch::autograd::CopySlices> ]
> 
> print('St (true scores)')
[1] "St (true scores)"
> print(state)
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    1    1    1    1
[2,]    1    1    1    1    1
[3,]    1    1    1    1    1
[4,]    1    1    1    1    1
[5,]    1    1    1    1    1
[6,]    1    1    1    1    1
[7,]    1    1    1    1    1
> print('mPr')
[1] "mPr"
> print(mPrBest)
torch_tensor
 1.8235e-03  3.8532e-31  7.4590e-34  9.6528e-35
 1.8545e-03  3.9055e-31  7.4754e-34  9.9198e-35
 1.8668e-03  3.9361e-31  7.6650e-34  1.0052e-34
 1.8129e-03  3.8158e-31  7.4403e-34  9.9850e-35
 1.8371e-03  3.8022e-31  7.2981e-34  9.5820e-35
 1.8271e-03  3.8470e-31  7.4382e-34  9.9543e-35
 1.7976e-03  3.7715e-31  7.2215e-34  9.6840e-35
[ CPUFloatType{7,4} ][ grad_fn = <SliceBackward0> ]